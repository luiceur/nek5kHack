%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lustre/atlas/scratch/csep22/trn001/nek5_acc/nek_2013_11_27/speclib.f
Compiled : 10/28/14  13:45:36
Compiler : Version 8.3.0
Ftnlx    : Version 8316 (libcif 83015)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=interlagos -haccel=nvidia_35 -hdynamic
           -D__CRAYXE -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=gemini
           -I/opt/cray/perftools/6.2.0/include -DCRAYPAT -homp_trace
           -hpat_trace -L/opt/cray/perftools/6.2.0/lib64 -c -O2 -hacc -ra
           -sreal64 -eZ -em -Rc -rm -DPTRSIZE8 -DMPI -DLONGINT8 -DUNDERSCORE
           -DGLOBAL_LONG_LONG
           -I/lustre/atlas/scratch/csep22/trn001/nek5_acc/pipe_2013_11_27
           -I/lustre/atlas/scratch/csep22/trn001/nek5_acc/nek_2013_11_27 -I./
           -oobj/speclib.o -I/opt/cray/cce/8.3.0/craylibs/x86-64/include
           -I/opt/cray/libsci_acc/3.0.3.1/CRAY/83/x86_64/include
           -I/opt/cray/libsci/13.0.0/CRAY/83/interlagos/include
           -I/opt/cray/mpt/7.0.0/gni/mpich2-cray/83/include
           -I/opt/nvidia/cudatoolkit/5.5.22-1.0502.7944.3.1/include
           -I/opt/nvidia/cudatoolkit/5.5.22-1.0502.7944.3.1/extras/CUPTI/include
           -I/opt/nvidia/cudatoolkit/5.5.22-1.0502.7944.3.1/nvvm/include
           -I/opt/cray/rca/1.0.0-2.0502.53711.3.125.gem/include
           -I/opt/cray/pmi/5.0.4-1.0000.10161.132.18.gem/include
           -I/opt/cray/xpmem/0.1-2.0502.55507.3.2.gem/include
           -I/opt/cray/dmapp/7.0.1-1.0502.9501.5.211.gem/include
           -I/opt/cray/gni-headers/3.0-1.0502.9684.5.2.gem/include
           -I/opt/cray/ugni/5.0-1.0502.9685.4.24.gem/include
           -I/opt/cray/udreg/2.3.2-1.0502.9275.1.25.gem/include
           -I/opt/cray/alps/5.2.1-2.0502.9041.11.6.gem/include
           -I/opt/cray/cce/8.3.0/craylibs/x86-64/pkgconfig/../include
           -I/opt/cray/cce/8.3.0/craylibs/x86-64/include
           -I/opt/cray/wlm_detect/1.0-1.0502.53341.1.1.gem/include
           -I/opt/cray/krca/1.0.0-2.0502.53880.4.103.gem/include
           -I/opt/cray-hss-devel/7.2.0/include /lustre/atlas/scratch/csep22/trn0
           01/nek5_acc/nek_2013_11_27/speclib.f

ftnlx report
------------
Source   : /lustre/atlas1/trn001/scratch/csep22/nek5_acc/pipe_2013_11_27//lustre/atlas/scratch/csep22/trn001/nek5_acc/nek_2013_11_27/speclib.f
Date     : 10/28/2014  13:45:42


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          O p t i o n s   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Options :  -O cache2,fp2,scalar2,thread2,vector2,mpi0,modinline,ipa3,noaggress
           -O autoprefetch,noautothread,fusion2,nomsgs,negmsgs,nooverindex
           -O pattern,shortcircuit2,unroll2,nozeroinc
           -h noadd_paren,align_arrays,caf,noconcurrent,nocontiguous,nofp_trap
           -h nofunc_trace,nomessage,noomp_analyze,omp_trace,pat_trace
           -h omp,acc
           -h acc_model=auto_async_kernel:fast_addr:no_deep_copy
           -h cpu=x86-64,interlagos,gemini,accel=NVIDIA_GPU
           -s real64
           -eh
           -d acdgjnopvBDEIPQRS0
           -e mqswACFTZ
           -J bj
           -R c 
           -f fixed
           -m3
           -N72
           -S /tmp/scratch/pe_9023/speclib_1.s


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned                
     F - Flat - No calls      f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.                       C==============================================================================
    2.                       C
    3.                       C     LIBRARY ROUTINES FOR SPECTRAL METHODS
    4.                       C
    5.                       C     March 1989
    6.                       C
    7.                       C     For questions, comments or suggestions, please contact:
    8.                       C
    9.                       C     Einar Malvin Ronquist
   10.                       C     Room 3-243
   11.                       C     Department of Mechanical Engineering
   12.                       C     Massachusetts Institute of Technology
   13.                       C     77 Massachusetts Avenue
   14.                       C     Cambridge, MA 0299
   15.                       C     U.S.A.
   16.                       C
   17.                       C------------------------------------------------------------------------------
   18.                       C
   19.                       C     ABBRIVIATIONS:
   20.                       C
   21.                       C     M   - Set of mesh points
   22.                       C     Z   - Set of collocation/quadrature points
   23.                       C     W   - Set of quadrature weights
   24.                       C     H   - Lagrangian interpolant
   25.                       C     D   - Derivative operator
   26.                       C     I   - Interpolation operator
   27.                       C     GL  - Gauss Legendre
   28.                       C     GLL - Gauss-Lobatto Legendre
   29.                       C     GJ  - Gauss Jacobi
   30.                       C     GLJ - Gauss-Lobatto Jacobi
   31.                       C
   32.                       C
   33.                       C     MAIN ROUTINES:
   34.                       C
   35.                       C     Points and weights:
   36.                       C
   37.                       C     ZWGL      Compute Gauss Legendre points and weights
   38.                       C     ZWGLL     Compute Gauss-Lobatto Legendre points and weights
   39.                       C     ZWGJ      Compute Gauss Jacobi points and weights (general)
   40.                       C     ZWGLJ     Compute Gauss-Lobatto Jacobi points and weights (general)
   41.                       C
   42.                       C     Lagrangian interpolants:
   43.                       C
   44.                       C     HGL       Compute Gauss Legendre Lagrangian interpolant
   45.                       C     HGLL      Compute Gauss-Lobatto Legendre Lagrangian interpolant
   46.                       C     HGJ       Compute Gauss Jacobi Lagrangian interpolant (general)
   47.                       C     HGLJ      Compute Gauss-Lobatto Jacobi Lagrangian interpolant (general)
   48.                       C
   49.                       C     Derivative operators:
   50.                       C
   51.                       C     DGLL      Compute Gauss-Lobatto Legendre derivative matrix
   52.                       C     DGLLGL    Compute derivative matrix for a staggered mesh (GLL->GL)
   53.                       C     DGJ       Compute Gauss Jacobi derivative matrix (general)
   54.                       C     DGLJ      Compute Gauss-Lobatto Jacobi derivative matrix (general)
   55.                       C     DGLJGJ    Compute derivative matrix for a staggered mesh (GLJ->GJ) (general)
   56.                       C
   57.                       C     Interpolation operators:
   58.                       C
   59.                       C     IGLM      Compute interpolation operator GL  -> M
   60.                       C     IGLLM     Compute interpolation operator GLL -> M
   61.                       C     IGJM      Compute interpolation operator GJ  -> M  (general)
   62.                       C     IGLJM     Compute interpolation operator GLJ -> M  (general)
   63.                       C
   64.                       C     Other:
   65.                       C
   66.                       C     PNLEG     Compute Legendre polynomial of degree N
   67.                       C     PNDLEG    Compute derivative of Legendre polynomial of degree N
   68.                       C
   69.                       C     Comments:
   70.                       C
   71.                       C     Note that many of the above routines exist in both single and
   72.                       C     double precision. If the name of the single precision routine is
   73.                       C     SUB, the double precision version is called SUBD. In most cases
   74.                       C     all the "low-level" arithmetic is done in double precision, even
   75.                       C     for the single precsion versions.
   76.                       C
   77.                       C     Useful references:
   78.                       C
   79.                       C [1] Gabor Szego: Orthogonal Polynomials, American Mathematical Society,
   80.                       C     Providence, Rhode Island, 1939.
   81.                       C [2] Abramowitz & Stegun: Handbook of Mathematical Functions,
   82.                       C     Dover, New York, 1972.
   83.                       C [3] Canuto, Hussaini, Quarteroni & Zang: Spectral Methods in Fluid
   84.                       C     Dynamics, Springer-Verlag, 1988.
   85.                       C
   86.                       C
   87.                       C==============================================================================
   88.                       C
   89.                       C--------------------------------------------------------------------
   90.                             SUBROUTINE ZWGL (Z,W,NP)
   91.                       C--------------------------------------------------------------------
   92.                       C
   93.                       C     Generate NP Gauss Legendre points (Z) and weights (W)
   94.                       C     associated with Jacobi polynomial P(N)(alpha=0,beta=0).
   95.                       C     The polynomial degree N=NP-1.
   96.                       C     Z and W are in single precision, but all the arithmetic
   97.                       C     operations are done in double precision.
   98.                       C
   99.                       C--------------------------------------------------------------------
  100.                             REAL Z(1),W(1)
  101.                             ALPHA = 0.
  102.                             BETA  = 0.
  103.  +                          CALL ZWGJ (Z,W,NP,ALPHA,BETA)
  104.                             RETURN
  105.                             END

ftn-3118 ftn: IPA File = speclib.f, Line = 103 
  "zwgj" (called from "zwgl") was not inlined because the call site will not flatten.  "exitt" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  106.                       C
  107.                             SUBROUTINE ZWGLL (Z,W,NP)
  108.                       C--------------------------------------------------------------------
  109.                       C
  110.                       C     Generate NP Gauss-Lobatto Legendre points (Z) and weights (W)
  111.                       C     associated with Jacobi polynomial P(N)(alpha=0,beta=0).
  112.                       C     The polynomial degree N=NP-1.
  113.                       C     Z and W are in single precision, but all the arithmetic
  114.                       C     operations are done in double precision.
  115.                       C
  116.                       C--------------------------------------------------------------------
  117.                             REAL Z(1),W(1)
  118.                             ALPHA = 0.
  119.                             BETA  = 0.
  120.  +                          CALL ZWGLJ (Z,W,NP,ALPHA,BETA)
  121.                             RETURN
  122.                             END

ftn-3118 ftn: IPA File = speclib.f, Line = 120 
  "zwglj" (called from "zwgll") was not inlined because the call site will not flatten.  "exitt" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  123.                       C
  124.                             SUBROUTINE ZWGJ (Z,W,NP,ALPHA,BETA)
  125.                       C--------------------------------------------------------------------
  126.                       C
  127.                       C     Generate NP GAUSS JACOBI points (Z) and weights (W)
  128.                       C     associated with Jacobi polynomial P(N)(alpha>-1,beta>-1).
  129.                       C     The polynomial degree N=NP-1.
  130.                       C     Single precision version.
  131.                       C
  132.                       C--------------------------------------------------------------------
  133.                             PARAMETER (NMAX=84)
  134.                             PARAMETER (NZD = NMAX)
  135.                             REAL*8  ZD(NZD),WD(NZD),APHAD,BETAD
  136.                             REAL Z(1),W(1),ALPHA,BETA
  137.                       C
  138.                             NPMAX = NZD
  139.                             IF (NP.GT.NPMAX) THEN
  140.                                WRITE (6,*) 'Too large polynomial degree in ZWGJ'
  141.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  142.                                WRITE (6,*) 'Here NP=',NP
  143.  +                             call exitt
  144.                             ENDIF
  145.                             ALPHAD = ALPHA
  146.                             BETAD  = BETA
  147.  +                          CALL ZWGJD (ZD,WD,NP,ALPHAD,BETAD)
  148.    A----------------<       DO 100 I=1,NP
  149.    A                           Z(I) = ZD(I)
  150.    A                           W(I) = WD(I)
  151.    A---------------->  100  CONTINUE
  152.                             RETURN
  153.                             END
ftn-5002 ftn: NOTE File = speclib.f, Line = 153 
  Local variable "APHAD" is declared but neither defined nor used.


ftn-3021 ftn: IPA File = speclib.f, Line = 143 
  "exitt" (called from "zwgj") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA File = speclib.f, Line = 147 
  "zwgjd" (called from "zwgj") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6230 ftn: VECTOR File = speclib.f, Line = 148 
  A loop starting at line 148 was replaced with multiple library calls.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  154.                       C
  155.                             SUBROUTINE ZWGJD (Z,W,NP,ALPHA,BETA)
  156.                       C--------------------------------------------------------------------
  157.                       C
  158.                       C     Generate NP GAUSS JACOBI points (Z) and weights (W)
  159.                       C     associated with Jacobi polynomial P(N)(alpha>-1,beta>-1).
  160.                       C     The polynomial degree N=NP-1.
  161.                       C     Double precision version.
  162.                       C
  163.                       C--------------------------------------------------------------------
  164.                             IMPLICIT REAL*8  (A-H,O-Z)
  165.                             REAL*8  Z(1),W(1),ALPHA,BETA
  166.                       C
  167.                             N     = NP-1
  168.                             DN    = ((N))
  169.                             ONE   = 1.
  170.                             TWO   = 2.
  171.                             APB   = ALPHA+BETA
  172.                       C
  173.                             IF (NP.LE.0) THEN
  174.                                WRITE (6,*) 'ZWGJD: Minimum number of Gauss points is 1',np
  175.  +                             call exitt
  176.                             ENDIF
  177.                             IF ((ALPHA.LE.-ONE).OR.(BETA.LE.-ONE)) THEN
  178.                                WRITE (6,*) 'ZWGJD: Alpha and Beta must be greater than -1'
  179.  +                             call exitt
  180.                             ENDIF
  181.                       C
  182.                             IF (NP.EQ.1) THEN
  183.                                Z(1) = (BETA-ALPHA)/(APB+TWO)
  184.  +                             W(1) = GAMMAF(ALPHA+ONE)*GAMMAF(BETA+ONE)/GAMMAF(APB+TWO)
  185.                            $          * TWO**(APB+ONE)
  186.                                RETURN
  187.                             ENDIF
  188.                       C
  189.  +                          CALL JACG (Z,NP,ALPHA,BETA)
  190.                       C
  191.                             NP1   = N+1
  192.                             NP2   = N+2
  193.                             DNP1  = ((NP1))
  194.                             DNP2  = ((NP2))
  195.                             FAC1  = DNP1+ALPHA+BETA+ONE
  196.                             FAC2  = FAC1+DNP1
  197.                             FAC3  = FAC2+ONE
  198.  +                          FNORM = PNORMJ(NP1,ALPHA,BETA)
  199.                             RCOEF = (FNORM*FAC2*FAC3)/(TWO*FAC1*DNP2)
  200.  + VF---------------<       DO 100 I=1,NP
  201.  + VF  I------------>          CALL JACOBF (P,PD,PM1,PDM1,PM2,PDM2,NP2,ALPHA,BETA,Z(I))
  202.    VF                          W(I) = -RCOEF/(P*PDM1)
  203.    VF--------------->  100  CONTINUE
  204.                             RETURN
  205.                             END
ftn-5001 ftn: NOTE File = speclib.f, Line = 205 
  Local variable "DN" is assigned a value but never used.


ftn-3021 ftn: IPA File = speclib.f, Line = 175 
  "exitt" (called from "zwgjd") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 179 
  "exitt" (called from "zwgjd") was not inlined because the compiler was unable to locate the routine.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 184 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 184 
  "gammaf" (called from "zwgjd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 184 
  "gammaf" (called from "zwgjd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 184 
  "gammaf" (called from "zwgjd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 189 
  "jacg" (called from "zwgjd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 198 
  "pnormj" (called from "zwgjd") was not inlined because it is not in the body of a loop.

ftn-6204 ftn: VECTOR File = speclib.f, Line = 200 
  A loop starting at line 200 was vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 200 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 201 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 201 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 201 
  A loop starting at line 201 was vectorized as part of the loop starting at line 200.

ftn-3001 ftn: IPA File = speclib.f, Line = 201 
  The call to leaf routine "jacobf" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  206.                       C
  207.                             SUBROUTINE ZWGLJ (Z,W,NP,ALPHA,BETA)
  208.                       C--------------------------------------------------------------------
  209.                       C
  210.                       C     Generate NP GAUSS LOBATTO JACOBI points (Z) and weights (W)
  211.                       C     associated with Jacobi polynomial P(N)(alpha>-1,beta>-1).
  212.                       C     The polynomial degree N=NP-1.
  213.                       C     Single precision version.
  214.                       C
  215.                       C--------------------------------------------------------------------
  216.                             PARAMETER (NMAX=84)
  217.                             PARAMETER (NZD = NMAX)
  218.                             REAL*8  ZD(NZD),WD(NZD),ALPHAD,BETAD
  219.                             REAL Z(1),W(1),ALPHA,BETA
  220.                       C
  221.                             NPMAX = NZD
  222.                             IF (NP.GT.NPMAX) THEN
  223.                                WRITE (6,*) 'Too large polynomial degree in ZWGLJ'
  224.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  225.                                WRITE (6,*) 'Here NP=',NP
  226.  +                             call exitt
  227.                             ENDIF
  228.                             ALPHAD = ALPHA
  229.                             BETAD  = BETA
  230.  +                          CALL ZWGLJD (ZD,WD,NP,ALPHAD,BETAD)
  231.    A----------------<       DO 100 I=1,NP
  232.    A                           Z(I) = ZD(I)
  233.    A                           W(I) = WD(I)
  234.    A---------------->  100  CONTINUE
  235.                             RETURN
  236.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 226 
  "exitt" (called from "zwglj") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA File = speclib.f, Line = 230 
  "zwgljd" (called from "zwglj") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6230 ftn: VECTOR File = speclib.f, Line = 231 
  A loop starting at line 231 was replaced with multiple library calls.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  237.                       C
  238.                             SUBROUTINE ZWGLJD (Z,W,NP,ALPHA,BETA)
  239.                       C--------------------------------------------------------------------
  240.                       C
  241.                       C     Generate NP GAUSS LOBATTO JACOBI points (Z) and weights (W)
  242.                       C     associated with Jacobi polynomial P(N)(alpha>-1,beta>-1).
  243.                       C     The polynomial degree N=NP-1.
  244.                       C     Double precision version.
  245.                       C
  246.                       C--------------------------------------------------------------------
  247.                             IMPLICIT REAL*8  (A-H,O-Z)
  248.                             REAL*8  Z(NP),W(NP),ALPHA,BETA
  249.                       C
  250.                             N     = NP-1
  251.                             NM1   = N-1
  252.                             ONE   = 1.
  253.                             TWO   = 2.
  254.                       C
  255.                             IF (NP.LE.1) THEN
  256.                              WRITE (6,*) 'ZWGLJD: Minimum number of Gauss-Lobatto points is 2'
  257.                              WRITE (6,*) 'ZWGLJD: alpha,beta:',alpha,beta,np
  258.  +                           call exitt
  259.                             ENDIF
  260.                             IF ((ALPHA.LE.-ONE).OR.(BETA.LE.-ONE)) THEN
  261.                                WRITE (6,*) 'ZWGLJD: Alpha and Beta must be greater than -1'
  262.  +                             call exitt
  263.                             ENDIF
  264.                       C
  265.                             IF (NM1.GT.0) THEN
  266.                                ALPG  = ALPHA+ONE
  267.                                BETG  = BETA+ONE
  268.  +                             CALL ZWGJD (Z(2),W(2),NM1,ALPG,BETG)
  269.                             ENDIF
  270.                             Z(1)  = -ONE
  271.                             Z(NP) =  ONE
  272.    Vr4--------------<       DO 100  I=2,NP-1
  273.    Vr4                         W(I) = W(I)/(ONE-Z(I)**2)
  274.    Vr4-------------->  100  CONTINUE
  275.  +                          CALL JACOBF (P,PD,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,Z(1))
  276.  +                          W(1)  = ENDW1 (N,ALPHA,BETA)/(TWO*PD)
  277.  +                          CALL JACOBF (P,PD,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,Z(NP))
  278.  +                          W(NP) = ENDW2 (N,ALPHA,BETA)/(TWO*PD)
  279.                       C
  280.                             RETURN
  281.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 258 
  "exitt" (called from "zwgljd") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 262 
  "exitt" (called from "zwgljd") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA File = speclib.f, Line = 268 
  "zwgjd" (called from "zwgljd") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 272 
  A loop starting at line 272 was unrolled 4 times.

ftn-6204 ftn: VECTOR File = speclib.f, Line = 272 
  A loop starting at line 272 was vectorized.

ftn-3171 ftn: IPA File = speclib.f, Line = 275 
  "jacobf" (called from "zwgljd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 276 
  "endw1" (called from "zwgljd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 277 
  "jacobf" (called from "zwgljd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 278 
  "endw2" (called from "zwgljd") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  282.                       C
  283.                             REAL*8  FUNCTION ENDW1 (N,ALPHA,BETA)
  284.                             IMPLICIT REAL*8  (A-H,O-Z)
  285.                             REAL*8  ALPHA,BETA
  286.                             ZERO  = 0.
  287.                             ONE   = 1.
  288.                             TWO   = 2.
  289.                             THREE = 3.
  290.                             FOUR  = 4.
  291.                             APB   = ALPHA+BETA
  292.                             IF (N.EQ.0) THEN
  293.                                ENDW1 = ZERO
  294.                                RETURN
  295.                             ENDIF
  296.  +                          F1   = GAMMAF(ALPHA+TWO)*GAMMAF(BETA+ONE)/GAMMAF(APB+THREE)
  297.  +                          F1   = F1*(APB+TWO)*TWO**(APB+TWO)/TWO
  298.                             IF (N.EQ.1) THEN
  299.                                ENDW1 = F1
  300.                                RETURN
  301.                             ENDIF
  302.  +                          FINT1 = GAMMAF(ALPHA+TWO)*GAMMAF(BETA+ONE)/GAMMAF(APB+THREE)
  303.  +                          FINT1 = FINT1*TWO**(APB+TWO)
  304.  +                          FINT2 = GAMMAF(ALPHA+TWO)*GAMMAF(BETA+TWO)/GAMMAF(APB+FOUR)
  305.                             FINT2 = FINT2*TWO**(APB+THREE)
  306.  +                          F2    = (-TWO*(BETA+TWO)*FINT1 + (APB+FOUR)*FINT2)
  307.                            $        * (APB+THREE)/FOUR
  308.                             IF (N.EQ.2) THEN
  309.                                ENDW1 = F2
  310.                                RETURN
  311.                             ENDIF
  312.  + 1----------------<       DO 100 I=3,N
  313.    1                           DI   = ((I-1))
  314.    1                           ABN  = ALPHA+BETA+DI
  315.    1                           ABNN = ABN+DI
  316.    1                           A1   = -(TWO*(DI+ALPHA)*(DI+BETA))/(ABN*ABNN*(ABNN+ONE))
  317.    1                           A2   =  (TWO*(ALPHA-BETA))/(ABNN*(ABNN+TWO))
  318.    1                           A3   =  (TWO*(ABN+ONE))/((ABNN+TWO)*(ABNN+ONE))
  319.    1                           F3   =  -(A2*F2+A1*F1)/A3
  320.    1                           F1   = F2
  321.    1                           F2   = F3
  322.    1---------------->  100  CONTINUE
  323.                             ENDW1  = F3
  324.                             RETURN
  325.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 296 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 296 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 296 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 297 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 302 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 302 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 302 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 303 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 304 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 304 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 304 
  "gammaf" (called from "endw1") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 306 
  An exponentiation was replaced with a faster code sequence.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 312 
  A loop starting at line 312 was not vectorized because a recurrence was found on "f1" at line 320.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  326.                       C
  327.                             REAL*8  FUNCTION ENDW2 (N,ALPHA,BETA)
  328.                             IMPLICIT REAL*8  (A-H,O-Z)
  329.                             REAL*8  ALPHA,BETA
  330.                             ZERO  = 0.
  331.                             ONE   = 1.
  332.                             TWO   = 2.
  333.                             THREE = 3.
  334.                             FOUR  = 4.
  335.                             APB   = ALPHA+BETA
  336.                             IF (N.EQ.0) THEN
  337.                                ENDW2 = ZERO
  338.                                RETURN
  339.                             ENDIF
  340.  +                          F1   = GAMMAF(ALPHA+ONE)*GAMMAF(BETA+TWO)/GAMMAF(APB+THREE)
  341.  +                          F1   = F1*(APB+TWO)*TWO**(APB+TWO)/TWO
  342.                             IF (N.EQ.1) THEN
  343.                                ENDW2 = F1
  344.                                RETURN
  345.                             ENDIF
  346.  +                          FINT1 = GAMMAF(ALPHA+ONE)*GAMMAF(BETA+TWO)/GAMMAF(APB+THREE)
  347.  +                          FINT1 = FINT1*TWO**(APB+TWO)
  348.  +                          FINT2 = GAMMAF(ALPHA+TWO)*GAMMAF(BETA+TWO)/GAMMAF(APB+FOUR)
  349.                             FINT2 = FINT2*TWO**(APB+THREE)
  350.  +                          F2    = (TWO*(ALPHA+TWO)*FINT1 - (APB+FOUR)*FINT2)
  351.                            $        * (APB+THREE)/FOUR
  352.                             IF (N.EQ.2) THEN
  353.                                ENDW2 = F2
  354.                                RETURN
  355.                             ENDIF
  356.  + 1----------------<       DO 100 I=3,N
  357.    1                           DI   = ((I-1))
  358.    1                           ABN  = ALPHA+BETA+DI
  359.    1                           ABNN = ABN+DI
  360.    1                           A1   =  -(TWO*(DI+ALPHA)*(DI+BETA))/(ABN*ABNN*(ABNN+ONE))
  361.    1                           A2   =  (TWO*(ALPHA-BETA))/(ABNN*(ABNN+TWO))
  362.    1                           A3   =  (TWO*(ABN+ONE))/((ABNN+TWO)*(ABNN+ONE))
  363.    1                           F3   =  -(A2*F2+A1*F1)/A3
  364.    1                           F1   = F2
  365.    1                           F2   = F3
  366.    1---------------->  100  CONTINUE
  367.                             ENDW2  = F3
  368.                             RETURN
  369.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 340 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 340 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 340 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 341 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 346 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 346 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 346 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 347 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 348 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 348 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 348 
  "gammaf" (called from "endw2") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 350 
  An exponentiation was replaced with a faster code sequence.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 356 
  A loop starting at line 356 was not vectorized because a recurrence was found on "f1" at line 364.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  370.                       C
  371.                             REAL*8  FUNCTION GAMMAF (X)
  372.                             IMPLICIT REAL*8  (A-H,O-Z)
  373.                             REAL*8  X
  374.                             ZERO = 0.0
  375.                             HALF = 0.5
  376.                             ONE  = 1.0
  377.                             TWO  = 2.0
  378.                             FOUR = 4.0
  379.                             PI   = FOUR*ATAN(ONE)
  380.                             GAMMAF = ONE
  381.                             IF (X.EQ.-HALF) GAMMAF = -TWO*SQRT(PI)
  382.                             IF (X.EQ. HALF) GAMMAF =  SQRT(PI)
  383.                             IF (X.EQ. ONE ) GAMMAF =  ONE
  384.                             IF (X.EQ. TWO ) GAMMAF =  ONE
  385.  +                          IF (X.EQ. 1.5  ) GAMMAF =  SQRT(PI)/2.
  386.  +                          IF (X.EQ. 2.5) GAMMAF =  1.5*SQRT(PI)/2.
  387.                             IF (X.EQ. 3.5) GAMMAF =  0.5*(2.5*(1.5*SQRT(PI)))
  388.                             IF (X.EQ. 3. ) GAMMAF =  2.
  389.                             IF (X.EQ. 4. ) GAMMAF = 6.
  390.                             IF (X.EQ. 5. ) GAMMAF = 24.
  391.                             IF (X.EQ. 6. ) GAMMAF = 120.
  392.                             RETURN
  393.                             END
ftn-5001 ftn: NOTE File = speclib.f, Line = 393 
  Local variable "ZERO" is assigned a value but never used.


ftn-6010 ftn: SCALAR File = speclib.f, Line = 385 
  A divide was turned into a multiply by a reciprocal

ftn-6010 ftn: SCALAR File = speclib.f, Line = 386 
  A divide was turned into a multiply by a reciprocal



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  394.                       C
  395.                             REAL*8  FUNCTION PNORMJ (N,ALPHA,BETA)
  396.                             IMPLICIT REAL*8  (A-H,O-Z)
  397.                             REAL*8  ALPHA,BETA
  398.                             ONE   = 1.
  399.                             TWO   = 2.
  400.                             DN    = ((N))
  401.                             CONST = ALPHA+BETA+ONE
  402.                             IF (N.LE.1) THEN
  403.  +                             PROD   = GAMMAF(DN+ALPHA)*GAMMAF(DN+BETA)
  404.  +                             PROD   = PROD/(GAMMAF(DN)*GAMMAF(DN+ALPHA+BETA))
  405.  +                             PNORMJ = PROD * TWO**CONST/(TWO*DN+CONST)
  406.                                RETURN
  407.                             ENDIF
  408.  +                          PROD  = GAMMAF(ALPHA+ONE)*GAMMAF(BETA+ONE)
  409.  +                          PROD  = PROD/(TWO*(ONE+CONST)*GAMMAF(CONST+ONE))
  410.                             PROD  = PROD*(ONE+ALPHA)*(TWO+ALPHA)
  411.                             PROD  = PROD*(ONE+BETA)*(TWO+BETA)
  412.    V----------------<       DO 100 I=3,N
  413.    V                           DINDX = ((I))
  414.    V                           FRAC  = (DINDX+ALPHA)*(DINDX+BETA)/(DINDX*(DINDX+ALPHA+BETA))
  415.    V                           PROD  = PROD*FRAC
  416.    V---------------->  100  CONTINUE
  417.  +                          PNORMJ = PROD * TWO**CONST/(TWO*DN+CONST)
  418.                             RETURN
  419.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 403 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 403 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 404 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 404 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 405 
  An exponentiation was replaced with a faster code sequence.

ftn-3171 ftn: IPA File = speclib.f, Line = 408 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 408 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 409 
  "gammaf" (called from "pnormj") was not inlined because it is not in the body of a loop.

ftn-6204 ftn: VECTOR File = speclib.f, Line = 412 
  A loop starting at line 412 was vectorized.

ftn-6074 ftn: SCALAR File = speclib.f, Line = 417 
  An exponentiation was replaced with a faster code sequence.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  420.                       C
  421.                             SUBROUTINE JACG (XJAC,NP,ALPHA,BETA)
  422.                       C--------------------------------------------------------------------
  423.                       C
  424.                       C     Compute NP Gauss points XJAC, which are the zeros of the
  425.                       C     Jacobi polynomial J(NP) with parameters ALPHA and BETA.
  426.                       C     ALPHA and BETA determines the specific type of Gauss points.
  427.                       C     Examples:
  428.                       C     ALPHA = BETA =  0.0  ->  Legendre points
  429.                       C     ALPHA = BETA = -0.5  ->  Chebyshev points
  430.                       C
  431.                       C--------------------------------------------------------------------
  432.                             IMPLICIT REAL*8  (A-H,O-Z)
  433.                             REAL*8  XJAC(1)
  434.                             DATA KSTOP /10/
  435.                             DATA EPS/1.0e-12/
  436.                             N   = NP-1
  437.                             one = 1.
  438.                             DTH = 4.*ATAN(one)/(2.*((N))+2.)
  439.  + wF---------------<       DO 40 J=1,NP
  440.    wF                          IF (J.EQ.1) THEN
  441.    wF                             X = COS((2.*(((J))-1.)+1.)*DTH)
  442.    wF                          ELSE
  443.    wF                             X1 = COS((2.*(((J))-1.)+1.)*DTH)
  444.    wF                             X2 = XLAST
  445.  + wF                             X  = (X1+X2)/2.
  446.    wF                          ENDIF
  447.  + wF F-------------<          DO 30 K=1,KSTOP
  448.  + wF F  I---------->             CALL JACOBF (P,PD,PM1,PDM1,PM2,PDM2,NP,ALPHA,BETA,X)
  449.    wF F                           RECSUM = 0.
  450.    wF F                           JM = J-1
  451.    wF F Vr6---------<             DO 29 I=1,JM
  452.  + wF F Vr6                          RECSUM = RECSUM+1./(X-XJAC(NP-I+1))
  453.    wF F Vr6--------->  29         CONTINUE
  454.    wF F                           DELX = -P/(PD-RECSUM*P)
  455.  + wF F                           X    = X+DELX
  456.    wF F                           IF (ABS(DELX) .LT. EPS) GOTO 31
  457.    wF F------------->  30      CONTINUE
  458.    wF                  31      CONTINUE
  459.    wF                          XJAC(NP-J+1) = X
  460.    wF                          XLAST        = X
  461.    wF--------------->  40   CONTINUE
  462.  + 1----------------<       DO 200 I=1,NP
  463.    1                           XMIN = 2.
  464.    1 A--------------<          DO 100 J=I,NP
  465.    1 A                            IF (XJAC(J).LT.XMIN) THEN
  466.    1 A                               XMIN = XJAC(J)
  467.    1 A                               JMIN = J
  468.    1 A                            ENDIF
  469.    1 A-------------->  100     CONTINUE
  470.    1                           IF (JMIN.NE.I) THEN
  471.    1                              SWAP = XJAC(I)
  472.    1                              XJAC(I) = XJAC(JMIN)
  473.    1                              XJAC(JMIN) = SWAP
  474.    1                           ENDIF
  475.    1---------------->  200  CONTINUE
  476.                             RETURN
  477.                             END

ftn-6008 ftn: SCALAR File = speclib.f, Line = 439 
  A loop starting at line 439 was unwound.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 439 
  A loop starting at line 439 was not vectorized because a recurrence was found on "x" at line 445.

ftn-3182 ftn: IPA File = speclib.f, Line = 439 
  Loop has been flattened.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 445 
  A divide was turned into a multiply by a reciprocal

ftn-6254 ftn: VECTOR File = speclib.f, Line = 447 
  A loop starting at line 447 was not vectorized because a recurrence was found on "x" at line 455.

ftn-3182 ftn: IPA File = speclib.f, Line = 447 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 448 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 448 
  A divide was turned into a multiply by a reciprocal

ftn-6254 ftn: VECTOR File = speclib.f, Line = 448 
  A loop starting at line 448 was not vectorized because a recurrence was found on "polyl" at line 448.

ftn-3001 ftn: IPA File = speclib.f, Line = 448 
  The call to leaf routine "jacobf" was textually inlined.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 451 
  A loop starting at line 451 was unrolled 6 times.

ftn-6204 ftn: VECTOR File = speclib.f, Line = 451 
  A loop starting at line 451 was vectorized.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 452 
  A divide was turned into a multiply by a reciprocal

ftn-6010 ftn: SCALAR File = speclib.f, Line = 455 
  A divide was turned into a multiply by a reciprocal

ftn-6262 ftn: VECTOR File = speclib.f, Line = 462 
  A loop starting at line 462 was not vectorized because it contains a call to a subroutine or function on line 465.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 464 
  A loop starting at line 464 was replaced by a library call.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  478.                       C
  479.                             SUBROUTINE JACOBF (POLY,PDER,POLYM1,PDERM1,POLYM2,PDERM2,
  480.                            $                   N,ALP,BET,X)
  481.                       C--------------------------------------------------------------------
  482.                       C
  483.                       C     Computes the Jacobi polynomial (POLY) and its derivative (PDER)
  484.                       C     of degree N at X.
  485.                       C
  486.                       C--------------------------------------------------------------------
  487.                             IMPLICIT REAL*8  (A-H,O-Z)
  488.                             APB  = ALP+BET
  489.                             POLY = 1.
  490.                             PDER = 0.
  491.                             IF (N .EQ. 0) RETURN
  492.                             POLYL = POLY
  493.                             PDERL = PDER
  494.  +                          POLY  = (ALP-BET+(APB+2.)*X)/2.
  495.  +                          PDER  = (APB+2.)/2.
  496.                             IF (N .EQ. 1) RETURN
  497.  + 1----------------<       DO 20 K=2,N
  498.    1                           DK = ((K))
  499.    1                           A1 = 2.*DK*(DK+APB)*(2.*DK+APB-2.)
  500.    1                           A2 = (2.*DK+APB-1.)*(ALP**2-BET**2)
  501.  + 1                           B3 = (2.*DK+APB-2.)
  502.    1                           A3 = B3*(B3+1.)*(B3+2.)
  503.    1                           A4 = 2.*(DK+ALP-1.)*(DK+BET-1.)*(2.*DK+APB)
  504.  + 1                           POLYN  = ((A2+A3*X)*POLY-A4*POLYL)/A1
  505.  + 1                           PDERN  = ((A2+A3*X)*PDER-A4*PDERL+A3*POLY)/A1
  506.    1                           PSAVE  = POLYL
  507.    1                           PDSAVE = PDERL
  508.    1                           POLYL  = POLY
  509.    1                           POLY   = POLYN
  510.    1                           PDERL  = PDER
  511.    1                           PDER   = PDERN
  512.    1---------------->  20   CONTINUE
  513.                             POLYM1 = POLYL
  514.                             PDERM1 = PDERL
  515.                             POLYM2 = PSAVE
  516.                             PDERM2 = PDSAVE
  517.                             RETURN
  518.                             END

ftn-6010 ftn: SCALAR File = speclib.f, Line = 494 
  A divide was turned into a multiply by a reciprocal

ftn-6010 ftn: SCALAR File = speclib.f, Line = 495 
  A divide was turned into a multiply by a reciprocal

ftn-6254 ftn: VECTOR File = speclib.f, Line = 497 
  A loop starting at line 497 was not vectorized because a recurrence was found on "polyl" at line 508.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 501 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 504 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 504 
  A divide was turned into a multiply by a reciprocal

ftn-6009 ftn: SCALAR File = speclib.f, Line = 505 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  519.                       C
  520.                             REAL FUNCTION HGJ (II,Z,ZGJ,NP,ALPHA,BETA)
  521.                       C---------------------------------------------------------------------
  522.                       C
  523.                       C     Compute the value of the Lagrangian interpolant HGJ through
  524.                       C     the NP Gauss Jacobi points ZGJ at the point Z.
  525.                       C     Single precision version.
  526.                       C
  527.                       C---------------------------------------------------------------------
  528.                             PARAMETER (NMAX=84)
  529.                             PARAMETER (NZD = NMAX)
  530.                             REAL*8  ZD,ZGJD(NZD),HGJD,ALPHAD,BETAD
  531.                             REAL Z,ZGJ(1),ALPHA,BETA
  532.                             NPMAX = NZD
  533.                             IF (NP.GT.NPMAX) THEN
  534.                                WRITE (6,*) 'Too large polynomial degree in HGJ'
  535.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  536.                                WRITE (6,*) 'Here NP=',NP
  537.  +                             call exitt
  538.                             ENDIF
  539.                             ZD = Z
  540.    A----------------<       DO 100 I=1,NP
  541.    A                           ZGJD(I) = ZGJ(I)
  542.    A---------------->  100  CONTINUE
  543.                             ALPHAD = ALPHA
  544.                             BETAD  = BETA
  545.  +                          HGJ    = HGJD (II,ZD,ZGJD,NP,ALPHAD,BETAD)
  546.                             RETURN
  547.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 537 
  "exitt" (called from "hgj") was not inlined because the compiler was unable to locate the routine.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 540 
  A loop starting at line 540 was replaced by a library call.

ftn-3171 ftn: IPA File = speclib.f, Line = 545 
  "hgjd" (called from "hgj") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  548.                       C
  549.                             REAL*8  FUNCTION HGJD (II,Z,ZGJ,NP,ALPHA,BETA)
  550.                       C---------------------------------------------------------------------
  551.                       C
  552.                       C     Compute the value of the Lagrangian interpolant HGJD through
  553.                       C     the NZ Gauss-Lobatto Jacobi points ZGJ at the point Z.
  554.                       C     Double precision version.
  555.                       C
  556.                       C---------------------------------------------------------------------
  557.                             IMPLICIT REAL*8  (A-H,O-Z)
  558.                             REAL*8  Z,ZGJ(1),ALPHA,BETA
  559.                             EPS = 1.e-5
  560.                             ONE = 1.
  561.                             ZI  = ZGJ(II)
  562.                             DZ  = Z-ZI
  563.                             IF (ABS(DZ).LT.EPS) THEN
  564.                                HGJD = ONE
  565.                                RETURN
  566.                             ENDIF
  567.  +                          CALL JACOBF (PZI,PDZI,PM1,PDM1,PM2,PDM2,NP,ALPHA,BETA,ZI)
  568.  +                          CALL JACOBF (PZ,PDZ,PM1,PDM1,PM2,PDM2,NP,ALPHA,BETA,Z)
  569.                             HGJD  = PZ/(PDZI*(Z-ZI))
  570.                             RETURN
  571.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 567 
  "jacobf" (called from "hgjd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 568 
  "jacobf" (called from "hgjd") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  572.                       C
  573.                             REAL FUNCTION HGLJ (II,Z,ZGLJ,NP,ALPHA,BETA)
  574.                       C---------------------------------------------------------------------
  575.                       C
  576.                       C     Compute the value of the Lagrangian interpolant HGLJ through
  577.                       C     the NZ Gauss-Lobatto Jacobi points ZGLJ at the point Z.
  578.                       C     Single precision version.
  579.                       C
  580.                       C---------------------------------------------------------------------
  581.                             PARAMETER (NMAX=84)
  582.                             PARAMETER (NZD = NMAX)
  583.                             REAL*8  ZD,ZGLJD(NZD),HGLJD,ALPHAD,BETAD
  584.                             REAL Z,ZGLJ(1),ALPHA,BETA
  585.                             NPMAX = NZD
  586.                             IF (NP.GT.NPMAX) THEN
  587.                                WRITE (6,*) 'Too large polynomial degree in HGLJ'
  588.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  589.                                WRITE (6,*) 'Here NP=',NP
  590.  +                             call exitt
  591.                             ENDIF
  592.                             ZD = Z
  593.    A----------------<       DO 100 I=1,NP
  594.    A                           ZGLJD(I) = ZGLJ(I)
  595.    A---------------->  100  CONTINUE
  596.                             ALPHAD = ALPHA
  597.                             BETAD  = BETA
  598.  +                          HGLJ   = HGLJD (II,ZD,ZGLJD,NP,ALPHAD,BETAD)
  599.                             RETURN
  600.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 590 
  "exitt" (called from "hglj") was not inlined because the compiler was unable to locate the routine.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 593 
  A loop starting at line 593 was replaced by a library call.

ftn-3171 ftn: IPA File = speclib.f, Line = 598 
  "hgljd" (called from "hglj") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  601.                       C
  602.                             REAL*8  FUNCTION HGLJD (I,Z,ZGLJ,NP,ALPHA,BETA)
  603.                       C---------------------------------------------------------------------
  604.                       C
  605.                       C     Compute the value of the Lagrangian interpolant HGLJD through
  606.                       C     the NZ Gauss-Lobatto Jacobi points ZJACL at the point Z.
  607.                       C     Double precision version.
  608.                       C
  609.                       C---------------------------------------------------------------------
  610.                             IMPLICIT REAL*8  (A-H,O-Z)
  611.                             REAL*8  Z,ZGLJ(1),ALPHA,BETA
  612.                             EPS = 1.e-5
  613.                             ONE = 1.
  614.                             ZI  = ZGLJ(I)
  615.                             DZ  = Z-ZI
  616.                             IF (ABS(DZ).LT.EPS) THEN
  617.                                HGLJD = ONE
  618.                                RETURN
  619.                             ENDIF
  620.                             N      = NP-1
  621.                             DN     = ((N))
  622.                             EIGVAL = -DN*(DN+ALPHA+BETA+ONE)
  623.  +                          CALL JACOBF (PI,PDI,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,ZI)
  624.                             CONST  = EIGVAL*PI+ALPHA*(ONE+ZI)*PDI-BETA*(ONE-ZI)*PDI
  625.  +                          CALL JACOBF (P,PD,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,Z)
  626.                             HGLJD  = (ONE-Z**2)*PD/(CONST*(Z-ZI))
  627.                             RETURN
  628.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 623 
  "jacobf" (called from "hgljd") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 625 
  "jacobf" (called from "hgljd") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  629.                       C
  630.                             SUBROUTINE DGJ (D,DT,Z,NZ,NZD,ALPHA,BETA)
  631.                       C-----------------------------------------------------------------
  632.                       C
  633.                       C     Compute the derivative matrix D and its transpose DT
  634.                       C     associated with the Nth order Lagrangian interpolants
  635.                       C     through the NZ Gauss Jacobi points Z.
  636.                       C     Note: D and DT are square matrices.
  637.                       C     Single precision version.
  638.                       C
  639.                       C-----------------------------------------------------------------
  640.                             PARAMETER (NMAX=84)
  641.                             PARAMETER (NZDD = NMAX)
  642.                             REAL*8  DD(NZDD,NZDD),DTD(NZDD,NZDD),ZD(NZDD),ALPHAD,BETAD
  643.                             REAL D(NZD,NZD),DT(NZD,NZD),Z(1),ALPHA,BETA
  644.                       C
  645.                             IF (NZ.LE.0) THEN
  646.                                WRITE (6,*) 'DGJ: Minimum number of Gauss points is 1'
  647.  +                             call exitt
  648.                             ENDIF
  649.                             IF (NZ .GT. NMAX) THEN
  650.                                WRITE (6,*) 'Too large polynomial degree in DGJ'
  651.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  652.                                WRITE (6,*) 'Here Nz=',Nz
  653.  +                             call exitt
  654.                             ENDIF
  655.                             IF ((ALPHA.LE.-1.).OR.(BETA.LE.-1.)) THEN
  656.                                WRITE (6,*) 'DGJ: Alpha and Beta must be greater than -1'
  657.  +                             call exitt
  658.                             ENDIF
  659.                             ALPHAD = ALPHA
  660.                             BETAD  = BETA
  661.    A----------------<       DO 100 I=1,NZ
  662.    A                           ZD(I) = Z(I)
  663.    A---------------->  100  CONTINUE
  664.  +                          CALL DGJD (DD,DTD,ZD,NZ,NZDD,ALPHAD,BETAD)
  665.    iA---------------<       DO 200 I=1,NZ
  666.  + iA i-------------<       DO 200 J=1,NZ
  667.    iA i                        D(I,J)  = DD(I,J)
  668.    iA i                        DT(I,J) = DTD(I,J)
  669.    iA i------------>>  200  CONTINUE
  670.                             RETURN
  671.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 647 
  "exitt" (called from "dgj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 653 
  "exitt" (called from "dgj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 657 
  "exitt" (called from "dgj") was not inlined because the compiler was unable to locate the routine.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 661 
  A loop starting at line 661 was replaced by a library call.

ftn-3118 ftn: IPA File = speclib.f, Line = 664 
  "dgjd" (called from "dgj") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 665 
  A loop starting at line 665 was interchanged with the loop starting at line 666.

ftn-6230 ftn: VECTOR File = speclib.f, Line = 665 
  A loop starting at line 665 was replaced with multiple library calls.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 666 
  A loop starting at line 666 was not vectorized because a better candidate was found at line 665.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  672.                       C
  673.                             SUBROUTINE DGJD (D,DT,Z,NZ,NZD,ALPHA,BETA)
  674.                       C-----------------------------------------------------------------
  675.                       C
  676.                       C     Compute the derivative matrix D and its transpose DT
  677.                       C     associated with the Nth order Lagrangian interpolants
  678.                       C     through the NZ Gauss Jacobi points Z.
  679.                       C     Note: D and DT are square matrices.
  680.                       C     Double precision version.
  681.                       C
  682.                       C-----------------------------------------------------------------
  683.                             IMPLICIT REAL*8  (A-H,O-Z)
  684.                             REAL*8  D(NZD,NZD),DT(NZD,NZD),Z(1),ALPHA,BETA
  685.                             N    = NZ-1
  686.                             DN   = ((N))
  687.                             ONE  = 1.
  688.                             TWO  = 2.
  689.                       C
  690.                             IF (NZ.LE.1) THEN
  691.                              WRITE (6,*) 'DGJD: Minimum number of Gauss-Lobatto points is 2'
  692.  +                           call exitt
  693.                             ENDIF
  694.                             IF ((ALPHA.LE.-ONE).OR.(BETA.LE.-ONE)) THEN
  695.                                WRITE (6,*) 'DGJD: Alpha and Beta must be greater than -1'
  696.  +                             call exitt
  697.                             ENDIF
  698.                       C
  699.  + iVpbF------------<       DO 200 I=1,NZ
  700.  + iVpbF iwbF-------<       DO 200 J=1,NZ
  701.  + iVpbF iwbF f I--<>          CALL JACOBF (PI,PDI,PM1,PDM1,PM2,PDM2,NZ,ALPHA,BETA,Z(I))
  702.  + iVpbF iwbF f I--->          CALL JACOBF (PJ,PDJ,PM1,PDM1,PM2,PDM2,NZ,ALPHA,BETA,Z(J))
  703.    iVpbF iwbF                  IF (I.NE.J) D(I,J) = PDI/(PDJ*(Z(I)-Z(J)))
  704.    iVpbF iwbF                  IF (I.EQ.J) D(I,J) = ((ALPHA+BETA+TWO)*Z(I)+ALPHA-BETA)/
  705.    iVpbF iwbF              $                        (TWO*(ONE-Z(I)**2))
  706.    iVpbF iwbF                  DT(J,I) = D(I,J)
  707.    iVpbF iwbF------>>  200  CONTINUE
  708.                             RETURN
  709.                             END
ftn-5001 ftn: NOTE File = speclib.f, Line = 709 
  Local variable "DN" is assigned a value but never used.


ftn-3021 ftn: IPA File = speclib.f, Line = 692 
  "exitt" (called from "dgjd") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 696 
  "exitt" (called from "dgjd") was not inlined because the compiler was unable to locate the routine.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 699 
  A loop starting at line 699 was interchanged with the loop starting at line 700.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 699 
  A loop starting at line 699 was interchanged with the loop starting at line 700.

ftn-6049 ftn: SCALAR File = speclib.f, Line = 699 
  A loop starting at line 699 was blocked with block size 64.

ftn-6375 ftn: VECTOR File = speclib.f, Line = 699 
  A loop starting at line 699 would benefit from "!dir$ safe_address".

ftn-6217 ftn: VECTOR File = speclib.f, Line = 699 
  A loop starting at line 699 was partially and conditionally vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 699 
  Loop has been flattened.

ftn-6008 ftn: SCALAR File = speclib.f, Line = 700 
  A loop starting at line 700 was unwound.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 700 
  A loop starting at line 700 was not vectorized because a better candidate was found at line 699.

ftn-6049 ftn: SCALAR File = speclib.f, Line = 700 
  A loop starting at line 700 was blocked with block size 128.

ftn-3182 ftn: IPA File = speclib.f, Line = 700 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 701 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 701 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 701 
  A loop starting at line 701 was vectorized as part of the loop starting at line 699.

ftn-3001 ftn: IPA File = speclib.f, Line = 701 
  The call to leaf routine "jacobf" was textually inlined.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 702 
  A divide was turned into a multiply by a reciprocal

ftn-6294 ftn: VECTOR File = speclib.f, Line = 702 
  A loop starting at line 702 was not vectorized because a better candidate was found at line 699.

ftn-6004 ftn: SCALAR File = speclib.f, Line = 702 
  A loop starting at line 702 was fused with the loop starting at line 701.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 702 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-3001 ftn: IPA File = speclib.f, Line = 702 
  The call to leaf routine "jacobf" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  710.                       C
  711.                             SUBROUTINE DGLJ (D,DT,Z,NZ,NZD,ALPHA,BETA)
  712.                       C-----------------------------------------------------------------
  713.                       C
  714.                       C     Compute the derivative matrix D and its transpose DT
  715.                       C     associated with the Nth order Lagrangian interpolants
  716.                       C     through the NZ Gauss-Lobatto Jacobi points Z.
  717.                       C     Note: D and DT are square matrices.
  718.                       C     Single precision version.
  719.                       C
  720.                       C-----------------------------------------------------------------
  721.                             PARAMETER (NMAX=84)
  722.                             PARAMETER (NZDD = NMAX)
  723.                             REAL*8  DD(NZDD,NZDD),DTD(NZDD,NZDD),ZD(NZDD),ALPHAD,BETAD
  724.                             REAL D(NZD,NZD),DT(NZD,NZD),Z(1),ALPHA,BETA
  725.                       C
  726.                             IF (NZ.LE.1) THEN
  727.                              WRITE (6,*) 'DGLJ: Minimum number of Gauss-Lobatto points is 2'
  728.  +                           call exitt
  729.                             ENDIF
  730.                             IF (NZ .GT. NMAX) THEN
  731.                                WRITE (6,*) 'Too large polynomial degree in DGLJ'
  732.                                WRITE (6,*) 'Maximum polynomial degree is',NMAX
  733.                                WRITE (6,*) 'Here NZ=',NZ
  734.  +                             call exitt
  735.                             ENDIF
  736.                             IF ((ALPHA.LE.-1.).OR.(BETA.LE.-1.)) THEN
  737.                                WRITE (6,*) 'DGLJ: Alpha and Beta must be greater than -1'
  738.  +                             call exitt
  739.                             ENDIF
  740.                             ALPHAD = ALPHA
  741.                             BETAD  = BETA
  742.    A----------------<       DO 100 I=1,NZ
  743.    A                           ZD(I) = Z(I)
  744.    A---------------->  100  CONTINUE
  745.  +                          CALL DGLJD (DD,DTD,ZD,NZ,NZDD,ALPHAD,BETAD)
  746.    iA---------------<       DO 200 I=1,NZ
  747.  + iA i-------------<       DO 200 J=1,NZ
  748.    iA i                        D(I,J)  = DD(I,J)
  749.    iA i                        DT(I,J) = DTD(I,J)
  750.    iA i------------>>  200  CONTINUE
  751.                             RETURN
  752.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 728 
  "exitt" (called from "dglj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 734 
  "exitt" (called from "dglj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 738 
  "exitt" (called from "dglj") was not inlined because the compiler was unable to locate the routine.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 742 
  A loop starting at line 742 was replaced by a library call.

ftn-3118 ftn: IPA File = speclib.f, Line = 745 
  "dgljd" (called from "dglj") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 746 
  A loop starting at line 746 was interchanged with the loop starting at line 747.

ftn-6230 ftn: VECTOR File = speclib.f, Line = 746 
  A loop starting at line 746 was replaced with multiple library calls.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 747 
  A loop starting at line 747 was not vectorized because a better candidate was found at line 746.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  753.                       C
  754.                             SUBROUTINE DGLJD (D,DT,Z,NZ,NZD,ALPHA,BETA)
  755.                       C-----------------------------------------------------------------
  756.                       C
  757.                       C     Compute the derivative matrix D and its transpose DT
  758.                       C     associated with the Nth order Lagrangian interpolants
  759.                       C     through the NZ Gauss-Lobatto Jacobi points Z.
  760.                       C     Note: D and DT are square matrices.
  761.                       C     Double precision version.
  762.                       C
  763.                       C-----------------------------------------------------------------
  764.                             IMPLICIT REAL*8  (A-H,O-Z)
  765.                             REAL*8  D(NZD,NZD),DT(NZD,NZD),Z(1),ALPHA,BETA
  766.                             N    = NZ-1
  767.                             DN   = ((N))
  768.                             ONE  = 1.
  769.                             TWO  = 2.
  770.                             EIGVAL = -DN*(DN+ALPHA+BETA+ONE)
  771.                       C
  772.                             IF (NZ.LE.1) THEN
  773.                              WRITE (6,*) 'DGLJD: Minimum number of Gauss-Lobatto points is 2'
  774.  +                           call exitt
  775.                             ENDIF
  776.                             IF ((ALPHA.LE.-ONE).OR.(BETA.LE.-ONE)) THEN
  777.                                WRITE (6,*) 'DGLJD: Alpha and Beta must be greater than -1'
  778.  +                             call exitt
  779.                             ENDIF
  780.                       C
  781.  + F----------------<       DO 200 I=1,NZ
  782.  + F VpF------------<       DO 200 J=1,NZ
  783.  + F VpF  I--------->          CALL JACOBF (PI,PDI,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,Z(I))
  784.  + F VpF  I--------->          CALL JACOBF (PJ,PDJ,PM1,PDM1,PM2,PDM2,N,ALPHA,BETA,Z(J))
  785.    F VpF                       CI = EIGVAL*PI-(BETA*(ONE-Z(I))-ALPHA*(ONE+Z(I)))*PDI
  786.    F VpF                       CJ = EIGVAL*PJ-(BETA*(ONE-Z(J))-ALPHA*(ONE+Z(J)))*PDJ
  787.    F VpF                       IF (I.NE.J) D(I,J) = CI/(CJ*(Z(I)-Z(J)))
  788.    F VpF                       IF ((I.EQ.J).AND.(I.NE.1).AND.(I.NE.NZ))
  789.    F VpF                   $   D(I,J) = (ALPHA*(ONE+Z(I))-BETA*(ONE-Z(I)))/
  790.    F VpF                   $            (TWO*(ONE-Z(I)**2))
  791.    F VpF                       IF ((I.EQ.J).AND.(I.EQ.1))
  792.    F VpF                   $   D(I,J) =  (EIGVAL+ALPHA)/(TWO*(BETA+TWO))
  793.    F VpF                       IF ((I.EQ.J).AND.(I.EQ.NZ))
  794.    F VpF                   $   D(I,J) = -(EIGVAL+BETA)/(TWO*(ALPHA+TWO))
  795.    F VpF                       DT(J,I) = D(I,J)
  796.    F VpF----------->>  200  CONTINUE
  797.                             RETURN
  798.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 774 
  "exitt" (called from "dgljd") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 778 
  "exitt" (called from "dgljd") was not inlined because the compiler was unable to locate the routine.

ftn-6289 ftn: VECTOR File = speclib.f, Line = 781 
  A loop starting at line 781 was not vectorized because a recurrence was found on "d" between lines 792 and 794.

ftn-3182 ftn: IPA File = speclib.f, Line = 781 
  Loop has been flattened.

ftn-6209 ftn: VECTOR File = speclib.f, Line = 782 
  A loop starting at line 782 was partially vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 782 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 783 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 783 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 783 
  A loop starting at line 783 was vectorized as part of the loop starting at line 782.

ftn-3001 ftn: IPA File = speclib.f, Line = 783 
  The call to leaf routine "jacobf" was textually inlined.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 784 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 784 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 784 
  A loop starting at line 784 was vectorized as part of the loop starting at line 782.

ftn-3001 ftn: IPA File = speclib.f, Line = 784 
  The call to leaf routine "jacobf" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  799.                       C
  800.                             SUBROUTINE DGLL (D,DT,Z,NZ,NZD)
  801.                       C-----------------------------------------------------------------
  802.                       C
  803.                       C     Compute the derivative matrix D and its transpose DT
  804.                       C     associated with the Nth order Lagrangian interpolants
  805.                       C     through the NZ Gauss-Lobatto Legendre points Z.
  806.                       C     Note: D and DT are square matrices.
  807.                       C
  808.                       C-----------------------------------------------------------------
  809.                             PARAMETER (NMAX=84)
  810.                             REAL D(NZD,NZD),DT(NZD,NZD),Z(1)
  811.                             N  = NZ-1
  812.                             IF (NZ .GT. NMAX) THEN
  813.                                WRITE (6,*) 'Subroutine DGLL'
  814.                                WRITE (6,*) 'Maximum polynomial degree =',NMAX
  815.                                WRITE (6,*) 'Polynomial degree         =',NZ
  816.                             ENDIF
  817.                             IF (NZ .EQ. 1) THEN
  818.                                D(1,1) = 0.
  819.                                RETURN
  820.                             ENDIF
  821.                             FN = (N)
  822.  +                          d0 = FN*(FN+1.)/4.
  823.  + F----------------<       DO 200 I=1,NZ
  824.  + F F--------------<       DO 200 J=1,NZ
  825.    F F                         D(I,J) = 0.
  826.  + F F r4 I--------->          IF  (I.NE.J) D(I,J) = PNLEG(Z(I),N)/
  827.  + F F r4 I--------->      $                        (PNLEG(Z(J),N)*(Z(I)-Z(J)))
  828.    F F                         IF ((I.EQ.J).AND.(I.EQ.1))  D(I,J) = -d0
  829.    F F                         IF ((I.EQ.J).AND.(I.EQ.NZ)) D(I,J) =  d0
  830.    F F                         DT(J,I) = D(I,J)
  831.    F F------------->>  200  CONTINUE
  832.                             RETURN
  833.                             END

ftn-6010 ftn: SCALAR File = speclib.f, Line = 822 
  A divide was turned into a multiply by a reciprocal

ftn-6315 ftn: VECTOR File = speclib.f, Line = 823 
  A loop starting at line 823 was not vectorized because the target array (z) would require rank expansion.

ftn-3182 ftn: IPA File = speclib.f, Line = 823 
  Loop has been flattened.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 824 
  A loop starting at line 824 was not vectorized because a recurrence was found on "z" at line 826.

ftn-3182 ftn: IPA File = speclib.f, Line = 824 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 826 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 826 
  A loop starting at line 826 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 826 
  A loop starting at line 826 was not vectorized because a recurrence was found on "p1" at line 826.

ftn-3001 ftn: IPA File = speclib.f, Line = 826 
  The call to leaf routine "pnleg" was textually inlined.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 827 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 827 
  A loop starting at line 827 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 827 
  A loop starting at line 827 was not vectorized because a recurrence was found on "p1" at line 827.

ftn-3001 ftn: IPA File = speclib.f, Line = 827 
  The call to leaf routine "pnleg" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  834.                       C
  835.                             REAL FUNCTION HGLL (I,Z,ZGLL,NZ)
  836.                       C---------------------------------------------------------------------
  837.                       C
  838.                       C     Compute the value of the Lagrangian interpolant L through
  839.                       C     the NZ Gauss-Lobatto Legendre points ZGLL at the point Z.
  840.                       C
  841.                       C---------------------------------------------------------------------
  842.                             REAL ZGLL(1)
  843.                             EPS = 1.E-5
  844.                             DZ = Z - ZGLL(I)
  845.                             IF (ABS(DZ) .LT. EPS) THEN
  846.                                HGLL = 1.
  847.                                RETURN
  848.                             ENDIF
  849.                             N = NZ - 1
  850.                             ALFAN = (N)*((N)+1.)
  851.  +                          HGLL = - (1.-Z*Z)*PNDLEG(Z,N)/
  852.  +                         $         (ALFAN*PNLEG(ZGLL(I),N)*(Z-ZGLL(I)))
  853.                             RETURN
  854.                             END

ftn-3171 ftn: IPA File = speclib.f, Line = 851 
  "pndleg" (called from "hgll") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 852 
  "pnleg" (called from "hgll") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  855.                       C
  856.                             REAL FUNCTION HGL (I,Z,ZGL,NZ)
  857.                       C---------------------------------------------------------------------
  858.                       C
  859.                       C     Compute the value of the Lagrangian interpolant HGL through
  860.                       C     the NZ Gauss Legendre points ZGL at the point Z.
  861.                       C
  862.                       C---------------------------------------------------------------------
  863.                             REAL ZGL(1)
  864.                             EPS = 1.E-5
  865.                             DZ = Z - ZGL(I)
  866.                             IF (ABS(DZ) .LT. EPS) THEN
  867.                                HGL = 1.
  868.                                RETURN
  869.                             ENDIF
  870.                             N = NZ-1
  871.  +                          HGL = PNLEG(Z,NZ)/(PNDLEG(ZGL(I),NZ)*(Z-ZGL(I)))
  872.                             RETURN
  873.                             END
ftn-5001 ftn: NOTE File = speclib.f, Line = 873 
  Local variable "N" is assigned a value but never used.


ftn-3171 ftn: IPA File = speclib.f, Line = 871 
  "pnleg" (called from "hgl") was not inlined because it is not in the body of a loop.

ftn-3171 ftn: IPA File = speclib.f, Line = 871 
  "pndleg" (called from "hgl") was not inlined because it is not in the body of a loop.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  874.                       C
  875.                             REAL FUNCTION PNLEG (Z,N)
  876.                       C---------------------------------------------------------------------
  877.                       C
  878.                       C     Compute the value of the Nth order Legendre polynomial at Z.
  879.                       C     (Simpler than JACOBF)
  880.                       C     Based on the recursion formula for the Legendre polynomials.
  881.                       C
  882.                       C---------------------------------------------------------------------
  883.                       C
  884.                       C     This next statement is to overcome the underflow bug in the i860.  
  885.                       C     It can be removed at a later date.  11 Aug 1990   pff.
  886.                       C
  887.                             IF(ABS(Z) .LT. 1.0E-25) Z = 0.0
  888.                       C
  889.                             P1   = 1.
  890.                             IF (N.EQ.0) THEN
  891.                                PNLEG = P1
  892.                                RETURN
  893.                             ENDIF
  894.                             P2   = Z
  895.                             P3   = P2
  896.  + r4---------------<       DO 10 K = 1, N-1
  897.    r4                          FK  = (K)
  898.  + r4                          P3  = ((2.*FK+1.)*Z*P2 - FK*P1)/(FK+1.)
  899.    r4                          P1  = P2
  900.    r4                          P2  = P3
  901.    r4--------------->  10   CONTINUE
  902.                             PNLEG = P3
  903.                             if (n.eq.0) pnleg = 1.
  904.                             RETURN
  905.                             END

ftn-6005 ftn: SCALAR File = speclib.f, Line = 896 
  A loop starting at line 896 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = speclib.f, Line = 896 
  A loop starting at line 896 was not vectorized because a recurrence was found on "p1" at line 899.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 898 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  906.                       C
  907.                             REAL FUNCTION PNDLEG (Z,N)
  908.                       C----------------------------------------------------------------------
  909.                       C
  910.                       C     Compute the derivative of the Nth order Legendre polynomial at Z.
  911.                       C     (Simpler than JACOBF)
  912.                       C     Based on the recursion formula for the Legendre polynomials.
  913.                       C
  914.                       C----------------------------------------------------------------------
  915.                             P1   = 1.
  916.                             P2   = Z
  917.                             P1D  = 0.
  918.                             P2D  = 1.
  919.                             P3D  = 1.
  920.  + 1----------------<       DO 10 K = 1, N-1
  921.    1                           FK  = (K)
  922.  + 1                           P3  = ((2.*FK+1.)*Z*P2 - FK*P1)/(FK+1.)
  923.  + 1                           P3D = ((2.*FK+1.)*P2 + (2.*FK+1.)*Z*P2D - FK*P1D)/(FK+1.)
  924.    1                           P1  = P2
  925.    1                           P2  = P3
  926.    1                           P1D = P2D
  927.    1                           P2D = P3D
  928.    1---------------->  10   CONTINUE
  929.                             PNDLEG = P3D
  930.                             IF (N.eq.0) pndleg = 0.
  931.                             RETURN
  932.                             END

ftn-6254 ftn: VECTOR File = speclib.f, Line = 920 
  A loop starting at line 920 was not vectorized because a recurrence was found on "p1" at line 924.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 922 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 922 
  A divide was turned into a multiply by a reciprocal

ftn-6009 ftn: SCALAR File = speclib.f, Line = 923 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  933.                       C
  934.                             SUBROUTINE DGLLGL (D,DT,ZM1,ZM2,IM12,NZM1,NZM2,ND1,ND2)
  935.                       C-----------------------------------------------------------------------
  936.                       C
  937.                       C     Compute the (one-dimensional) derivative matrix D and its
  938.                       C     transpose DT associated with taking the derivative of a variable
  939.                       C     expanded on a Gauss-Lobatto Legendre mesh (M1), and evaluate its
  940.                       C     derivative on a Guass Legendre mesh (M2).
  941.                       C     Need the one-dimensional interpolation operator IM12
  942.                       C     (see subroutine IGLLGL).
  943.                       C     Note: D and DT are rectangular matrices.
  944.                       C
  945.                       C-----------------------------------------------------------------------
  946.                             REAL D(ND2,ND1), DT(ND1,ND2), ZM1(ND1), ZM2(ND2), IM12(ND2,ND1)
  947.                             IF (NZM1.EQ.1) THEN
  948.                               D (1,1) = 0.
  949.                               DT(1,1) = 0.
  950.                               RETURN
  951.                             ENDIF
  952.                             EPS = 1.E-6
  953.                             NM1 = NZM1-1
  954.  + iVpbF------------<       DO 10 IP = 1, NZM2
  955.  + iVpbF ibF--------<          DO 10 JQ = 1, NZM1
  956.    iVpbF ibF                      ZP = ZM2(IP)
  957.    iVpbF ibF                      ZQ = ZM1(JQ)
  958.    iVpbF ibF                      IF ((ABS(ZP) .LT. EPS).AND.(ABS(ZQ) .LT. EPS)) THEN
  959.    iVpbF ibF                          D(IP,JQ) = 0.
  960.    iVpbF ibF                      ELSE
  961.  + iVpbF ibF  I----->                 D(IP,JQ) = (PNLEG(ZP,NM1)/PNLEG(ZQ,NM1)
  962.    iVpbF ibF               $                     -IM12(IP,JQ))/(ZP-ZQ)
  963.    iVpbF ibF                      ENDIF
  964.    iVpbF ibF                      DT(JQ,IP) = D(IP,JQ)
  965.    iVpbF ibF------->>  10   CONTINUE
  966.                             RETURN
  967.                             END

ftn-6007 ftn: SCALAR File = speclib.f, Line = 954 
  A loop starting at line 954 was interchanged with the loop starting at line 955.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 954 
  A loop starting at line 954 was interchanged with the loop starting at line 955.

ftn-6049 ftn: SCALAR File = speclib.f, Line = 954 
  A loop starting at line 954 was blocked with block size 256.

ftn-6375 ftn: VECTOR File = speclib.f, Line = 954 
  A loop starting at line 954 would benefit from "!dir$ safe_address".

ftn-6217 ftn: VECTOR File = speclib.f, Line = 954 
  A loop starting at line 954 was partially and conditionally vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 954 
  Loop has been flattened.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 955 
  A loop starting at line 955 was not vectorized because a better candidate was found at line 954.

ftn-6075 ftn: SCALAR File = speclib.f, Line = 955 
  A loop starting at line 955 participated in blocking, but was not itself blocked.

ftn-3182 ftn: IPA File = speclib.f, Line = 955 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 961 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 961 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 961 
  A loop starting at line 961 was vectorized as part of the loop starting at line 954.

ftn-3001 ftn: IPA File = speclib.f, Line = 961 
  The call to leaf routine "pnleg" was textually inlined.

ftn-3001 ftn: IPA File = speclib.f, Line = 961 
  The call to leaf routine "pnleg" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  968.                       C
  969.                             SUBROUTINE DGLJGJ (D,DT,ZGL,ZG,IGLG,NPGL,NPG,ND1,ND2,ALPHA,BETA)
  970.                       C-----------------------------------------------------------------------
  971.                       C
  972.                       C     Compute the (one-dimensional) derivative matrix D and its
  973.                       C     transpose DT associated with taking the derivative of a variable
  974.                       C     expanded on a Gauss-Lobatto Jacobi mesh (M1), and evaluate its
  975.                       C     derivative on a Guass Jacobi mesh (M2).
  976.                       C     Need the one-dimensional interpolation operator IM12
  977.                       C     (see subroutine IGLJGJ).
  978.                       C     Note: D and DT are rectangular matrices.
  979.                       C     Single precision version.
  980.                       C
  981.                       C-----------------------------------------------------------------------
  982.                             REAL D(ND2,ND1), DT(ND1,ND2), ZGL(ND1), ZG(ND2), IGLG(ND2,ND1)
  983.                             PARAMETER (NMAX=84)
  984.                             PARAMETER (NDD = NMAX)
  985.                             REAL*8  DD(NDD,NDD), DTD(NDD,NDD)
  986.                             REAL*8  ZGD(NDD), ZGLD(NDD), IGLGD(NDD,NDD)
  987.                             REAL*8  ALPHAD, BETAD
  988.                       C
  989.                             IF (NPGL.LE.1) THEN
  990.                              WRITE(6,*) 'DGLJGJ: Minimum number of Gauss-Lobatto points is 2'
  991.  +                           call exitt
  992.                             ENDIF
  993.                             IF (NPGL.GT.NMAX) THEN
  994.                                WRITE(6,*) 'Polynomial degree too high in DGLJGJ'
  995.                                WRITE(6,*) 'Maximum polynomial degree is',NMAX
  996.                                WRITE(6,*) 'Here NPGL=',NPGL
  997.  +                             call exitt
  998.                             ENDIF
  999.                             IF ((ALPHA.LE.-1.).OR.(BETA.LE.-1.)) THEN
 1000.                                WRITE(6,*) 'DGLJGJ: Alpha and Beta must be greater than -1'
 1001.  +                             call exitt
 1002.                             ENDIF
 1003.                       C
 1004.                             ALPHAD = ALPHA
 1005.                             BETAD  = BETA
 1006.    iA---------------<       DO 100 I=1,NPG
 1007.    iA                          ZGD(I) = ZG(I)
 1008.  + iA i-------------<          DO 100 J=1,NPGL
 1009.    iA i                           IGLGD(I,J) = IGLG(I,J)
 1010.    iA i------------>>  100  CONTINUE
 1011.    A----------------<       DO 200 I=1,NPGL
 1012.    A                           ZGLD(I) = ZGL(I)
 1013.    A---------------->  200  CONTINUE
 1014.  +                          CALL DGLJGJD (DD,DTD,ZGLD,ZGD,IGLGD,NPGL,NPG,NDD,NDD,ALPHAD,BETAD)
 1015.  + r4---------------<       DO 300 I=1,NPG
 1016.  + r4 Vpr2----------<       DO 300 J=1,NPGL
 1017.    r4 Vpr2                     D(I,J)  = DD(I,J)
 1018.    r4 Vpr2 A-------<>          DT(J,I) = DTD(J,I)
 1019.    r4 Vpr2--------->>  300  CONTINUE
 1020.                             RETURN
 1021.                             END

ftn-3021 ftn: IPA File = speclib.f, Line = 991 
  "exitt" (called from "dgljgj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 997 
  "exitt" (called from "dgljgj") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 1001 
  "exitt" (called from "dgljgj") was not inlined because the compiler was unable to locate the routine.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 1006 
  A loop starting at line 1006 was interchanged with the loop starting at line 1008.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 1006 
  A loop starting at line 1006 was replaced by a library call.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 1006 
  A loop starting at line 1006 was replaced by a library call.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 1006 
  A loop starting at line 1006 was replaced by a library call.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 1008 
  A loop starting at line 1008 was not vectorized because a better candidate was found at line 1006.

ftn-6202 ftn: VECTOR File = speclib.f, Line = 1011 
  A loop starting at line 1011 was replaced by a library call.

ftn-3118 ftn: IPA File = speclib.f, Line = 1014 
  "dgljgjd" (called from "dgljgj") was not inlined because the call site will not flatten.  "exitt" is missing.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 1015 
  A loop starting at line 1015 was not vectorized because a better candidate was found at line 1016.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 1015 
  A loop starting at line 1015 was unrolled 4 times.

ftn-6005 ftn: SCALAR File = speclib.f, Line = 1016 
  A loop starting at line 1016 was unrolled 2 times.

ftn-6382 ftn: VECTOR File = speclib.f, Line = 1016 
  A loop starting at line 1016 was partially vector pipelined.

ftn-6209 ftn: VECTOR File = speclib.f, Line = 1016 
  A loop starting at line 1016 was partially vectorized.

ftn-6231 ftn: VECTOR File = speclib.f, Line = 1018 
  A statement was replaced by a library call.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 1022.                       C
 1023.                             SUBROUTINE DGLJGJD (D,DT,ZGL,ZG,IGLG,NPGL,NPG,ND1,ND2,ALPHA,BETA)
 1024.                       C-----------------------------------------------------------------------
 1025.                       C
 1026.                       C     Compute the (one-dimensional) derivative matrix D and its
 1027.                       C     transpose DT associated with taking the derivative of a variable
 1028.                       C     expanded on a Gauss-Lobatto Jacobi mesh (M1), and evaluate its
 1029.                       C     derivative on a Guass Jacobi mesh (M2).
 1030.                       C     Need the one-dimensional interpolation operator IM12
 1031.                       C     (see subroutine IGLJGJ).
 1032.                       C     Note: D and DT are rectangular matrices.
 1033.                       C     Double precision version.
 1034.                       C
 1035.                       C-----------------------------------------------------------------------
 1036.                             IMPLICIT REAL*8  (A-H,O-Z)
 1037.                             REAL*8  D(ND2,ND1), DT(ND1,ND2), ZGL(ND1), ZG(ND2)
 1038.                             REAL*8  IGLG(ND2,ND1), ALPHA, BETA
 1039.                       C
 1040.                             IF (NPGL.LE.1) THEN
 1041.                              WRITE(6,*) 'DGLJGJD: Minimum number of Gauss-Lobatto points is 2'
 1042.  +                           call exitt
 1043.                             ENDIF
 1044.                             IF ((ALPHA.LE.-1.).OR.(BETA.LE.-1.)) THEN
 1045.                                WRITE(6,*) 'DGLJGJD: Alpha and Beta must be greater than -1'
 1046.  +                             call exitt
 1047.                             ENDIF
 1048.                       C
 1049.                             EPS    = 1.e-6
 1050.                             ONE    = 1.
 1051.                             TWO    = 2.
 1052.                             NGL    = NPGL-1
 1053.                             DN     = ((NGL))
 1054.                             EIGVAL = -DN*(DN+ALPHA+BETA+ONE)
 1055.                       C
 1056.  + iVpbF------------<       DO 100 I=1,NPG
 1057.  + iVpbF ibF--------<       DO 100 J=1,NPGL
 1058.    iVpbF ibF                   DZ = ABS(ZG(I)-ZGL(J))
 1059.    iVpbF ibF                   IF (DZ.LT.EPS) THEN
 1060.    iVpbF ibF                      D(I,J) = (ALPHA*(ONE+ZG(I))-BETA*(ONE-ZG(I)))/
 1061.    iVpbF ibF               $               (TWO*(ONE-ZG(I)**2))
 1062.    iVpbF ibF                   ELSE
 1063.  + iVpbF ibF  I----->             CALL JACOBF (PI,PDI,PM1,PDM1,PM2,PDM2,NGL,ALPHA,BETA,ZG(I))
 1064.  + iVpbF ibF  I----->             CALL JACOBF (PJ,PDJ,PM1,PDM1,PM2,PDM2,NGL,ALPHA,BETA,ZGL(J))
 1065.    iVpbF ibF                      FACI   = ALPHA*(ONE+ZG(I))-BETA*(ONE-ZG(I))
 1066.    iVpbF ibF                      FACJ   = ALPHA*(ONE+ZGL(J))-BETA*(ONE-ZGL(J))
 1067.    iVpbF ibF                      CONST  = EIGVAL*PJ+FACJ*PDJ
 1068.    iVpbF ibF                      D(I,J) = ((EIGVAL*PI+FACI*PDI)*(ZG(I)-ZGL(J))
 1069.    iVpbF ibF               $               -(ONE-ZG(I)**2)*PDI)/(CONST*(ZG(I)-ZGL(J))**2)
 1070.    iVpbF ibF                   ENDIF
 1071.    iVpbF ibF                   DT(J,I) = D(I,J)
 1072.    iVpbF ibF------->>  100  CONTINUE
 1073.                             RETURN
 1074.                             END
ftn-5004 ftn: NOTE File = speclib.f, Line = 1074 
  Dummy Argument "IGLG" is not referenced or defined.


ftn-3021 ftn: IPA File = speclib.f, Line = 1042 
  "exitt" (called from "dgljgjd") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = speclib.f, Line = 1046 
  "exitt" (called from "dgljgjd") was not inlined because the compiler was unable to locate the routine.

ftn-6007 ftn: SCALAR File = speclib.f, Line = 1056 
  A loop starting at line 1056 was interchanged with the loop starting at line 1057.

ftn-6049 ftn: SCALAR File = speclib.f, Line = 1056 
  A loop starting at line 1056 was blocked with block size 64.

ftn-6375 ftn: VECTOR File = speclib.f, Line = 1056 
  A loop starting at line 1056 would benefit from "!dir$ safe_address".

ftn-6217 ftn: VECTOR File = speclib.f, Line = 1056 
  A loop starting at line 1056 was partially and conditionally vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 1056 
  Loop has been flattened.

ftn-6294 ftn: VECTOR File = speclib.f, Line = 1057 
  A loop starting at line 1057 was not vectorized because a better candidate was found at line 1056.

ftn-6049 ftn: SCALAR File = speclib.f, Line = 1057 
  A loop starting at line 1057 was blocked with block size 128.

ftn-3182 ftn: IPA File = speclib.f, Line = 1057 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 1063 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 1063 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 1063 
  A loop starting at line 1063 was vectorized as part of the loop starting at line 1056.

ftn-3001 ftn: IPA File = speclib.f, Line = 1063 
  The call to leaf routine "jacobf" was textually inlined.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 1064 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 1064 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 1064 
  A loop starting at line 1064 was vectorized as part of the loop starting at line 1056.

ftn-3001 ftn: IPA File = speclib.f, Line = 1064 
  The call to leaf routine "jacobf" was textually inlined.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 1075.                       C
 1076.                             SUBROUTINE IGLM (I12,IT12,Z1,Z2,NZ1,NZ2,ND1,ND2)
 1077.                       C----------------------------------------------------------------------
 1078.                       C
 1079.                       C     Compute the one-dimensional interpolation operator (matrix) I12
 1080.                       C     ands its transpose IT12 for interpolating a variable from a
 1081.                       C     Gauss Legendre mesh (1) to a another mesh M (2).
 1082.                       C     Z1 : NZ1 Gauss Legendre points.
 1083.                       C     Z2 : NZ2 points on mesh M.
 1084.                       C
 1085.                       C--------------------------------------------------------------------
 1086.                             REAL I12(ND2,ND1),IT12(ND1,ND2),Z1(ND1),Z2(ND2)
 1087.                             IF (NZ1 .EQ. 1) THEN
 1088.                                I12 (1,1) = 1.
 1089.                                IT12(1,1) = 1.
 1090.                                RETURN
 1091.                             ENDIF
 1092.  + VpFr4------------<       DO 10 I=1,NZ2
 1093.    VpFr4                       ZI = Z2(I)
 1094.  + VpFr4 F----------<          DO 10 J=1,NZ1
 1095.  + VpFr4 F  I------->             I12 (I,J) = HGL(J,ZI,Z1,NZ1)
 1096.    VpFr4 F                        IT12(J,I) = I12(I,J)
 1097.    VpFr4 F--------->>  10   CONTINUE
 1098.                             RETURN
 1099.                             END

ftn-6005 ftn: SCALAR File = speclib.f, Line = 1092 
  A loop starting at line 1092 was unrolled 4 times.

ftn-6382 ftn: VECTOR File = speclib.f, Line = 1092 
  A loop starting at line 1092 was partially vector pipelined.

ftn-6217 ftn: VECTOR File = speclib.f, Line = 1092 
  A loop starting at line 1092 was partially and conditionally vectorized.

ftn-3182 ftn: IPA File = speclib.f, Line = 1092 
  Loop has been flattened.

ftn-6208 ftn: VECTOR File = speclib.f, Line = 1094 
  A loop starting at line 1094 was vectorized as part of the loop starting at line 1092.

ftn-3182 ftn: IPA File = speclib.f, Line = 1094 
  Loop has been flattened.

ftn-6009 ftn: SCALAR File = speclib.f, Line = 1095 
  A floating point expression involving an induction variable was strength reduced by optimization.  This may cause numerical
  differences.

ftn-6010 ftn: SCALAR File = speclib.f, Line = 1095 
  A divide was turned into a multiply by a reciprocal

ftn-6208 ftn: VECTOR File = speclib.f, Line = 1095 
  A loop starting at line 1095 was vectorized as part of the loop starting at line 1092.

ftn-3001 ftn: IPA File = speclib.f, Line = 1095 
  The call to routine "hgl" was textually inlined and flattened.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 1100.                       c
 1101.                             SUBROUTINE IGLLM (I12,IT12,Z1,Z2,NZ1,NZ2,ND1,ND2)
 1102.                       C----------------------------------------------------------------------
 1103.                       C
 1104.                       C     Compute the one-dimensional interpolation operator (matrix) I12
 1105.                       C     ands its transpose IT12 for interpolating a variable from a
 1106.                       C     Gauss-Lobatto Legendre mesh (1) to a another mesh M (2).
 1107.                       C     Z1 : NZ1 Gauss-Lobatto Legendre points.
 1108.                       C     Z2 : NZ2 points on mesh M.
 1109.                       C
 1110.                       C--------------------------------------------------------------------
 1111.                             REAL I12(ND2,ND1),IT12(ND1,ND2),Z1(ND1),Z2(ND2)
 1112.                             IF (NZ1 .EQ. 1) THEN
 1113.                                I12 (1,1) = 1.
 1114.                                IT12(1,1) = 1.
 1115.                                RETURN
 1116.                             ENDIF
 1117.  + 1----------------<       DO 10 I=1,NZ2
 1118.    1                           ZI = Z2(I)
 1119.  + 1 2--------------<          DO 10 J=1,NZ1
 1120.    1 2                !DIR$ NOINLINE
 1121.  + 1 2                            I12 (I,J) = HGLL(J,ZI,Z1,NZ1)
 1122.    1 2                            IT12(J,I) = I12(I,J)
 1123.    1 2                !DIR$ RESETINLINE
 1124.    1 2------------->>  10   CONTINUE
 1125.                             RETURN
 1126.                             END

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1117 
  A loop starting at line 1117 was not vectorized because it contains a call to function "hgll" on line 1121.

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1119 
  A loop starting at line 1119 was not vectorized because it contains a call to function "hgll" on line 1121.

ftn-3177 ftn: IPA File = speclib.f, Line = 1121 
  "hgll" (called from "igllm") was not inlined because inlining has been disabled with a compiler directive.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 1127.                       C
 1128.                             SUBROUTINE IGJM (I12,IT12,Z1,Z2,NZ1,NZ2,ND1,ND2,ALPHA,BETA)
 1129.                       C----------------------------------------------------------------------
 1130.                       C
 1131.                       C     Compute the one-dimensional interpolation operator (matrix) I12
 1132.                       C     ands its transpose IT12 for interpolating a variable from a
 1133.                       C     Gauss Jacobi mesh (1) to a another mesh M (2).
 1134.                       C     Z1 : NZ1 Gauss Jacobi points.
 1135.                       C     Z2 : NZ2 points on mesh M.
 1136.                       C     Single precision version.
 1137.                       C
 1138.                       C--------------------------------------------------------------------
 1139.                             REAL I12(ND2,ND1),IT12(ND1,ND2),Z1(ND1),Z2(ND2)
 1140.                             IF (NZ1 .EQ. 1) THEN
 1141.                                I12 (1,1) = 1.
 1142.                                IT12(1,1) = 1.
 1143.                                RETURN
 1144.                             ENDIF
 1145.  + 1----------------<       DO 10 I=1,NZ2
 1146.    1                           ZI = Z2(I)
 1147.  + 1 2--------------<          DO 10 J=1,NZ1
 1148.  + 1 2                            I12 (I,J) = HGJ(J,ZI,Z1,NZ1,ALPHA,BETA)
 1149.    1 2                            IT12(J,I) = I12(I,J)
 1150.    1 2------------->>  10   CONTINUE
 1151.                             RETURN
 1152.                             END

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1145 
  A loop starting at line 1145 was not vectorized because it contains a call to function "hgj" on line 1148.

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1147 
  A loop starting at line 1147 was not vectorized because it contains a call to function "hgj" on line 1148.

ftn-3118 ftn: IPA File = speclib.f, Line = 1148 
  "hgj" (called from "igjm") was not inlined because the call site will not flatten.  "exitt" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 1153.                       c
 1154.                             SUBROUTINE IGLJM (I12,IT12,Z1,Z2,NZ1,NZ2,ND1,ND2,ALPHA,BETA)
 1155.                       C----------------------------------------------------------------------
 1156.                       C
 1157.                       C     Compute the one-dimensional interpolation operator (matrix) I12
 1158.                       C     ands its transpose IT12 for interpolating a variable from a
 1159.                       C     Gauss-Lobatto Jacobi mesh (1) to a another mesh M (2).
 1160.                       C     Z1 : NZ1 Gauss-Lobatto Jacobi points.
 1161.                       C     Z2 : NZ2 points on mesh M.
 1162.                       C     Single precision version.
 1163.                       C
 1164.                       C--------------------------------------------------------------------
 1165.                             REAL I12(ND2,ND1),IT12(ND1,ND2),Z1(ND1),Z2(ND2)
 1166.                             IF (NZ1 .EQ. 1) THEN
 1167.                                I12 (1,1) = 1.
 1168.                                IT12(1,1) = 1.
 1169.                                RETURN
 1170.                             ENDIF
 1171.  + 1----------------<       DO 10 I=1,NZ2
 1172.    1                           ZI = Z2(I)
 1173.  + 1 2--------------<          DO 10 J=1,NZ1
 1174.  + 1 2                            I12 (I,J) = HGLJ(J,ZI,Z1,NZ1,ALPHA,BETA)
 1175.    1 2                            IT12(J,I) = I12(I,J)
 1176.    1 2------------->>  10   CONTINUE
 1177.                             RETURN
 1178.                             END

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1171 
  A loop starting at line 1171 was not vectorized because it contains a call to function "hglj" on line 1174.

ftn-6287 ftn: VECTOR File = speclib.f, Line = 1173 
  A loop starting at line 1173 was not vectorized because it contains a call to function "hglj" on line 1174.

ftn-3118 ftn: IPA File = speclib.f, Line = 1174 
  "hglj" (called from "igljm") was not inlined because the call site will not flatten.  "exitt" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   ZWGL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ALPHA                           Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      101
  Used     103

BETA                            Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      102
  Used     103

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl      90
  Set 
  Used     103

W                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl      90     100
  Set 
  Used     103

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl      90     100
  Set 
  Used     103

ZWGJ                                                              Subroutine, EXTERNAL
  Decl
  Set 
  Used     103

ZWGL                                                              Subroutine, EXTERNAL
  Decl      90
  Set 
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ZWGLL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ALPHA                           Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      118
  Used     120

BETA                            Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      119
  Used     120

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     107
  Set 
  Used     120

W                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     107     117
  Set 
  Used     120

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     107     117
  Set 
  Used     120

ZWGLJ                                                             Subroutine, EXTERNAL
  Decl
  Set 
  Used     120

ZWGLL                                                             Subroutine, EXTERNAL
  Decl     107
  Set 
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   ZWGJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     151
  Set 
  Used     148

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     124     136
  Set 
  Used     145

ALPHAD                          Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      145
  Used     147

APHAD                           Stack                             REAL*8
  Decl     135
  Set 
  Used

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     124     136
  Set 
  Used     146

BETAD                           Stack                             REAL*8
  Decl     135
  Set      146
  Used     147

EXITT                                                             Subroutine
  Decl
  Set 
  Used     143

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     149     150

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     133
  Set 
  Used     134     141

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     124
  Set 
  Used     139     142     147     148

NPMAX                           Stack                             INTEGER, Implicit type
  Decl
  Set      138
  Used     139

NZD                                                               INTEGER, Implicit type, PARAMETER
  Decl     134
  Set 
  Used     135     138

W                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     124     136
  Set      150
  Used

WD                              Stack                             REAL*8, DIMENSION(84)
  Decl     135
  Set 
  Used     147     150

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     124     136
  Set      149
  Used

ZD                              Stack                             REAL*8, DIMENSION(84)
  Decl     135
  Set 
  Used     147     149

ZWGJ                                                              Subroutine, EXTERNAL
  Decl     124
  Set 
  Used

ZWGJD                                                             Subroutine
  Decl
  Set 
  Used     147


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ZWGJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     203
  Set 
  Used     200

ALPHA                           Dummy Arg                         REAL*8
  Decl     155     165
  Set 
  Used     171     183     189     195     201

APB                             Stack                             REAL*8, Implicit type
  Decl
  Set      171
  Used     183     185

BETA                            Dummy Arg                         REAL*8
  Decl     155     165
  Set 
  Used     171     177     183     189     195     201

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set      168
  Used

DNP1                            Stack                             REAL*8, Implicit type
  Decl
  Set      193
  Used     195     196

DNP2                            Stack                             REAL*8, Implicit type
  Decl
  Set      194
  Used     199

EXITT                                                             Subroutine, EXTERNAL
  Decl
  Set 
  Used       0     179

FAC1                            Stack                             REAL*8, Implicit type
  Decl
  Set      195
  Used     196     199

FAC2                            Stack                             REAL*8, Implicit type
  Decl
  Set      196
  Used     197     199

FAC3                            Stack                             REAL*8, Implicit type
  Decl
  Set      197
  Used     199

FNORM                           Stack                             REAL*8, Implicit type
  Decl
  Set      198
  Used     199

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     201     202

JACG                                                              Subroutine, EXTERNAL
  Decl
  Set 
  Used     189

JACOBF                                                            Subroutine
  Decl
  Set 
  Used     201

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      167
  Used     168     191     192

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     155
  Set 
  Used     167     173     174     182     189     200

NP1                             Stack                             INTEGER, Implicit type
  Decl
  Set      191
  Used     193

NP2                             Stack                             INTEGER, Implicit type
  Decl
  Set      192
  Used     194     201

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      169
  Used     177     185     195     197

P                               Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201     202

PD                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201     202

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     201

RCOEF                           Stack                             REAL*8, Implicit type
  Decl
  Set      199
  Used     202

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      170
  Used     183     185     199

W                               Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     155     165
  Set      184     202
  Used

Z                               Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     155     165
  Set      183
  Used     189     201

ZWGJD                                                             Subroutine, EXTERNAL
  Decl     155
  Set 
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ZWGLJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     234
  Set 
  Used     231

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     207     219
  Set 
  Used     228

ALPHAD                          Stack                             REAL*8
  Decl     218
  Set      228
  Used     230

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     207     219
  Set 
  Used     229

BETAD                           Stack                             REAL*8
  Decl     218
  Set      229
  Used     230

EXITT                                                             Subroutine
  Decl
  Set 
  Used     226

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     232     233

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     216
  Set 
  Used     217     224

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     207
  Set 
  Used     222     225     230     231

NPMAX                           Stack                             INTEGER, Implicit type
  Decl
  Set      221
  Used     222

NZD                                                               INTEGER, Implicit type, PARAMETER
  Decl     217
  Set 
  Used     218     221

W                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     207     219
  Set      233
  Used

WD                              Stack                             REAL*8, DIMENSION(84)
  Decl     218
  Set 
  Used     230     233

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     207     219
  Set      232
  Used

ZD                              Stack                             REAL*8, DIMENSION(84)
  Decl     218
  Set 
  Used     230     232

ZWGLJ                                                             Subroutine, EXTERNAL
  Decl     207
  Set 
  Used

ZWGLJD                                                            Subroutine
  Decl
  Set 
  Used     230


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ZWGLJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     274
  Set 
  Used     272

ALPG                            Stack                             REAL*8, Implicit type
  Decl
  Set      266
  Used     268

ALPHA                           Dummy Arg                         REAL*8
  Decl     238     248
  Set 
  Used     257     266     275     277

BETA                            Dummy Arg                         REAL*8
  Decl     238     248
  Set 
  Used     257     260     267     275     277

BETG                            Stack                             REAL*8, Implicit type
  Decl
  Set      267
  Used     268

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     262

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     273

JACOBF                                                            Subroutine, EXTERNAL
  Decl
  Set 
  Used       0     277

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      250
  Used     251     275     277

NM1                             Stack                             INTEGER, Implicit type
  Decl
  Set      251
  Used     265     268

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     238
  Set 
  Used     248     250     255     257     271     272     277     278

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      252
  Used     260     266     267     270     271     273

P                               Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     277

PD                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     276     277     278

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     277

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     277

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     277

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     275     277

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      253
  Used     276     278

W                               Dummy Arg                         REAL*8, DIMENSION(<exp>)
  Decl     238     248
  Set      273     276     278
  Used     268

Z                               Dummy Arg                         REAL*8, DIMENSION(<exp>)
  Decl     238     248
  Set      270     271
  Used     268     273     275     277

ZWGJD                                                             Subroutine, EXTERNAL
  Decl
  Set 
  Used     268

ZWGLJD                                                            Subroutine, EXTERNAL
  Decl     238
  Set 
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ENDW1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     322
  Set 
  Used     312

A1                              Stack                             REAL*8, Implicit type
  Decl
  Set      316
  Used     319

A2                              Stack                             REAL*8, Implicit type
  Decl
  Set      317
  Used     319

A3                              Stack                             REAL*8, Implicit type
  Decl
  Set      318
  Used     319

ABN                             Stack                             REAL*8, Implicit type
  Decl
  Set      314
  Used     315     316     318

ABNN                            Stack                             REAL*8, Implicit type
  Decl
  Set      315
  Used     316     317     318

ALPHA                           Dummy Arg                         REAL*8
  Decl     283     285
  Set 
  Used     291     314     316     317

APB                             Stack                             REAL*8, Implicit type
  Decl
  Set      291
  Used     297     303     305     306     307

BETA                            Dummy Arg                         REAL*8
  Decl     283     285
  Set 
  Used     291     306     314     316     317

DI                              Stack                             REAL*8, Implicit type
  Decl
  Set      313
  Used     314     315     316

ENDW1                                                             Function, REAL*8, RESULT(ENDW1), EXTERNAL
  Decl     283
  Set 
  Used

ENDW1                           Register                          REAL*8, Function result
  Decl
  Set      293     299     309     323
  Used

F1                              Stack                             REAL*8, Implicit type
  Decl
  Set      296     297     320
  Used     299     319

F2                              Stack                             REAL*8, Implicit type
  Decl
  Set      306     321
  Used     309     319     320

F3                              Stack                             REAL*8, Implicit type
  Decl
  Set      319
  Used     321     323

FINT1                           Stack                             REAL*8, Implicit type
  Decl
  Set      302     303
  Used     306

FINT2                           Stack                             REAL*8, Implicit type
  Decl
  Set      304     305
  Used     306

FOUR                            Stack                             REAL*8, Implicit type
  Decl
  Set      290
  Used     306     307

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     313

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     283
  Set 
  Used     292     298     308     312

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      287
  Used     316     318

THREE                           Stack                             REAL*8, Implicit type
  Decl
  Set      289
  Used     305     307

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      288
  Used     297     303     305     306     316     317     318

ZERO                            Stack                             REAL*8, Implicit type
  Decl
  Set      286
  Used     293


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   ENDW2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     366
  Set 
  Used     356

A1                              Stack                             REAL*8, Implicit type
  Decl
  Set      360
  Used     363

A2                              Stack                             REAL*8, Implicit type
  Decl
  Set      361
  Used     363

A3                              Stack                             REAL*8, Implicit type
  Decl
  Set      362
  Used     363

ABN                             Stack                             REAL*8, Implicit type
  Decl
  Set      358
  Used     359     360     362

ABNN                            Stack                             REAL*8, Implicit type
  Decl
  Set      359
  Used     360     361     362

ALPHA                           Dummy Arg                         REAL*8
  Decl     327     329
  Set 
  Used     335     350     358     360     361

APB                             Stack                             REAL*8, Implicit type
  Decl
  Set      335
  Used     341     347     349     350     351

BETA                            Dummy Arg                         REAL*8
  Decl     327     329
  Set 
  Used     335     358     360     361

DI                              Stack                             REAL*8, Implicit type
  Decl
  Set      357
  Used     358     359     360

ENDW2                                                             Function, REAL*8, RESULT(ENDW2), EXTERNAL
  Decl     327
  Set 
  Used

ENDW2                           Register                          REAL*8, Function result
  Decl
  Set      337     343     353     367
  Used

F1                              Stack                             REAL*8, Implicit type
  Decl
  Set      340     341     364
  Used     343     363

F2                              Stack                             REAL*8, Implicit type
  Decl
  Set      350     365
  Used     353     363     364

F3                              Stack                             REAL*8, Implicit type
  Decl
  Set      363
  Used     365     367

FINT1                           Stack                             REAL*8, Implicit type
  Decl
  Set      346     347
  Used     350

FINT2                           Stack                             REAL*8, Implicit type
  Decl
  Set      348     349
  Used     350

FOUR                            Stack                             REAL*8, Implicit type
  Decl
  Set      334
  Used     350     351

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     357

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     327
  Set 
  Used     336     342     352     356

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      331
  Used     360     362

THREE                           Stack                             REAL*8, Implicit type
  Decl
  Set      333
  Used     349     351

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      332
  Used     341     347     349     350     360     361     362

ZERO                            Stack                             REAL*8, Implicit type
  Decl
  Set      330
  Used     337


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   GAMMAF
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ATAN                                                              Function, REAL, INTRINSIC
  Decl
  Set 
  Used     379

FOUR                            Stack                             REAL*8, Implicit type
  Decl
  Set      378
  Used     379

GAMMAF                                                            Function, REAL*8, RESULT(GAMMAF), EXTERNAL
  Decl     371
  Set 
  Used

GAMMAF                          Register                          REAL*8, Function result
  Decl
  Set      380     381     382     383     384     385     386     387     388     389     390     391
  Used

HALF                            Stack                             REAL*8, Implicit type
  Decl
  Set      375
  Used     381     382

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      376
  Used     379     380     383     384

PI                              Stack                             REAL*8, Implicit type
  Decl
  Set      379
  Used     381     382     385     386     387

SQRT                                                              Function, REAL, INTRINSIC
  Decl
  Set 
  Used       0     381     385     386     387

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      377
  Used     381     384

X                               Dummy Arg                         REAL*8
  Decl     371     373
  Set 
  Used     381     382     383     384     385     386     387     388     389     390     391

ZERO                            Stack                             REAL*8, Implicit type
  Decl
  Set      374
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   PNORMJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     416
  Set 
  Used     412

ALPHA                           Dummy Arg                         REAL*8
  Decl     395     397
  Set 
  Used     401     410     414

BETA                            Dummy Arg                         REAL*8
  Decl     395     397
  Set 
  Used     401     411     414

CONST                           Stack                             REAL*8, Implicit type
  Decl
  Set      401
  Used     405     409     417

DINDX                           Stack                             REAL*8, Implicit type
  Decl
  Set      413
  Used     414

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set      400
  Used     405     417

FRAC                            Stack                             REAL*8, Implicit type
  Decl
  Set      414
  Used     415

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     413

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     395
  Set 
  Used     400     402     412

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      398
  Used     401     409     410     411

PNORMJ                                                            Function, REAL*8, RESULT(PNORMJ), EXTERNAL
  Decl     395
  Set 
  Used

PNORMJ                          Register                          REAL*8, Function result
  Decl
  Set      405     417
  Used

PROD                            Stack                             REAL*8, Implicit type
  Decl
  Set      403     404     408     409     410     411     415
  Used     405     417

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      399
  Used     405     409     410     411     417


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   JACG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     469
  Set 
  Used     464

200                                                               Statement label
  Decl     475
  Set 
  Used     462

29                                                                Statement label
  Decl     453
  Set 
  Used     451

30                                                                Statement label
  Decl     457
  Set 
  Used     447

31                                                                Statement label
  Decl     458
  Set 
  Used     456

40                                                                Statement label
  Decl     461
  Set 
  Used     439

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     456

ALPHA                           Dummy Arg                         REAL*8, Implicit type
  Decl     421
  Set 
  Used     448

ATAN                                                              Function, REAL, INTRINSIC
  Decl
  Set 
  Used     438

BETA                            Dummy Arg                         REAL*8, Implicit type
  Decl     421
  Set 
  Used     448

COS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used       0     443

DELX                            Stack                             REAL*8, Implicit type
  Decl
  Set      454
  Used     455     456

DTH                             Stack                             REAL*8, Implicit type
  Decl
  Set      438
  Used     441     443

EPS                             Static offset=0                   REAL*8, Implicit type, INITIALIZED, SAVE
  Decl
  Set 
  Used     435     456

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     452     470     471     472

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     440     441     443     450     459     465     466     467

JACG                                                              Subroutine, EXTERNAL
  Decl     421
  Set 
  Used

JACOBF                                                            Subroutine, EXTERNAL
  Decl
  Set 
  Used     448

JM                              Stack                             INTEGER, Implicit type
  Decl
  Set      450
  Used     451

JMIN                            Stack                             INTEGER, Implicit type
  Decl
  Set      467
  Used     470     472     473

KSTOP                           Static offset=64                  INTEGER, Implicit type, INITIALIZED, SAVE
  Decl
  Set 
  Used     434     447

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      436
  Used     438

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     421
  Set 
  Used     436     439     448     452     459     462     464

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      437
  Used     438

P                               Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448     454

PD                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448     454

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     448

RECSUM                          Stack                             REAL*8, Implicit type
  Decl
  Set      449     452
  Used     454

SWAP                            Stack                             REAL*8, Implicit type
  Decl
  Set      471
  Used     473

X                               Stack                             REAL*8, Implicit type
  Decl
  Set      441     445     455
  Used     448     452     459     460

X1                              Stack                             REAL*8, Implicit type
  Decl
  Set      443
  Used     445

X2                              Stack                             REAL*8, Implicit type
  Decl
  Set      444
  Used     445

XJAC                            Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     421     433
  Set      459     472     473
  Used     452     465     466     471

XLAST                           Stack                             REAL*8, Implicit type
  Decl
  Set      460
  Used     444

XMIN                            Stack                             REAL*8, Implicit type
  Decl
  Set      463     466
  Used     465


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   JACOBF
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

20                                                                Statement label
  Decl     512
  Set 
  Used     497

A1                              Stack                             REAL*8, Implicit type
  Decl
  Set      499
  Used     504     505

A2                              Stack                             REAL*8, Implicit type
  Decl
  Set      500
  Used     504     505

A3                              Stack                             REAL*8, Implicit type
  Decl
  Set      502
  Used     504     505

A4                              Stack                             REAL*8, Implicit type
  Decl
  Set      503
  Used     504     505

ALP                             Dummy Arg                         REAL*8, Implicit type
  Decl     480
  Set 
  Used     488     494     500     503

APB                             Stack                             REAL*8, Implicit type
  Decl
  Set      488
  Used     494     495     499     500     501     503

B3                              Stack                             REAL*8, Implicit type
  Decl
  Set      501
  Used     502

BET                             Dummy Arg                         REAL*8, Implicit type
  Decl     480
  Set 
  Used     488     494     500     503

DK                              Stack                             REAL*8, Implicit type
  Decl
  Set      498
  Used     499     500     501     503

JACOBF                                                            Subroutine, EXTERNAL
  Decl     479
  Set 
  Used

K                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     498

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     480
  Set 
  Used     491     496     497

PDER                            Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      490     495     511
  Used     493     505     510

PDERL                           Stack                             REAL*8, Implicit type
  Decl
  Set      493     510
  Used     505     507     514

PDERM1                          Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      514
  Used

PDERM2                          Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      516
  Used

PDERN                           Stack                             REAL*8, Implicit type
  Decl
  Set      505
  Used     511

PDSAVE                          Stack                             REAL*8, Implicit type
  Decl
  Set      507
  Used     516

POLY                            Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      489     494     509
  Used     492     504     505     508

POLYL                           Stack                             REAL*8, Implicit type
  Decl
  Set      492     508
  Used     504     506     513

POLYM1                          Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      513
  Used

POLYM2                          Dummy Arg                         REAL*8, Implicit type
  Decl     479
  Set      515
  Used

POLYN                           Stack                             REAL*8, Implicit type
  Decl
  Set      504
  Used     509

PSAVE                           Stack                             REAL*8, Implicit type
  Decl
  Set      506
  Used     515

X                               Dummy Arg                         REAL*8, Implicit type
  Decl     480
  Set 
  Used     494     504     505


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   HGJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     542
  Set 
  Used     540

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     520     531
  Set 
  Used     543

ALPHAD                          Stack                             REAL*8
  Decl     530
  Set      543
  Used

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     520     531
  Set 
  Used     544

BETAD                           Stack                             REAL*8
  Decl     530
  Set      544
  Used

EXITT                                                             Subroutine
  Decl
  Set 
  Used     537

HGJ                                                               Function, DOUBLE PRECISION, RESULT(HGJ), EXTERNAL
  Decl     520
  Set 
  Used

HGJ                             Register                          DOUBLE PRECISION, Function result
  Decl
  Set      545
  Used

HGJD                                                              Function, REAL*8, RESULT(HGJD), EXTERNAL
  Decl     530
  Set 
  Used

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     541

II                              Dummy Arg                         INTEGER, Implicit type
  Decl     520
  Set 
  Used

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     528
  Set 
  Used     529     535

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     520
  Set 
  Used     533     536     540

NPMAX                           Stack                             INTEGER, Implicit type
  Decl
  Set      532
  Used     533

NZD                                                               INTEGER, Implicit type, PARAMETER
  Decl     529
  Set 
  Used     530     532

Z                               Dummy Arg                         DOUBLE PRECISION
  Decl     520     531
  Set 
  Used     539

ZD                              Stack                             REAL*8
  Decl     530
  Set      539
  Used

ZGJ                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     520     531
  Set 
  Used     541

ZGJD                            Stack                             REAL*8, DIMENSION(84)
  Decl     530
  Set      541
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   HGJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     563

ALPHA                           Dummy Arg                         REAL*8
  Decl     549     558
  Set 
  Used     567     568

BETA                            Dummy Arg                         REAL*8
  Decl     549     558
  Set 
  Used     567     568

DZ                              Stack                             REAL*8, Implicit type
  Decl
  Set      562
  Used     563

EPS                             Stack                             REAL*8, Implicit type
  Decl
  Set      559
  Used     563

HGJD                                                              Function, REAL*8, RESULT(HGJD), EXTERNAL
  Decl     549
  Set 
  Used

HGJD                            Register                          REAL*8, Function result
  Decl
  Set      564     569
  Used

II                              Dummy Arg                         INTEGER, Implicit type
  Decl     549
  Set 
  Used     561

JACOBF                                                            Subroutine
  Decl
  Set 
  Used       0     568

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     549
  Set 
  Used     567     568

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      560
  Used     564

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567     568

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567     568

PDZ                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     568

PDZI                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567     569

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567     568

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567     568

PZ                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     568     569

PZI                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     567

Z                               Dummy Arg                         REAL*8
  Decl     549     558
  Set 
  Used     562     568     569

ZGJ                             Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     549     558
  Set 
  Used     561

ZI                              Stack                             REAL*8, Implicit type
  Decl
  Set      561
  Used     562     567     569


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   HGLJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     595
  Set 
  Used     593

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     573     584
  Set 
  Used     596

ALPHAD                          Stack                             REAL*8
  Decl     583
  Set      596
  Used

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     573     584
  Set 
  Used     597

BETAD                           Stack                             REAL*8
  Decl     583
  Set      597
  Used

EXITT                                                             Subroutine
  Decl
  Set 
  Used     590

HGLJ                                                              Function, DOUBLE PRECISION, RESULT(HGLJ), EXTERNAL
  Decl     573
  Set 
  Used

HGLJ                            Register                          DOUBLE PRECISION, Function result
  Decl
  Set      598
  Used

HGLJD                                                             Function, REAL*8, RESULT(HGLJD), EXTERNAL
  Decl     583
  Set 
  Used

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     594

II                              Dummy Arg                         INTEGER, Implicit type
  Decl     573
  Set 
  Used

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     581
  Set 
  Used     582     588

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     573
  Set 
  Used     586     589     593

NPMAX                           Stack                             INTEGER, Implicit type
  Decl
  Set      585
  Used     586

NZD                                                               INTEGER, Implicit type, PARAMETER
  Decl     582
  Set 
  Used     583     585

Z                               Dummy Arg                         DOUBLE PRECISION
  Decl     573     584
  Set 
  Used     592

ZD                              Stack                             REAL*8
  Decl     583
  Set      592
  Used

ZGLJ                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     573     584
  Set 
  Used     594

ZGLJD                           Stack                             REAL*8, DIMENSION(84)
  Decl     583
  Set      594
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   HGLJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     616

ALPHA                           Dummy Arg                         REAL*8
  Decl     602     611
  Set 
  Used     622     623     624     625

BETA                            Dummy Arg                         REAL*8
  Decl     602     611
  Set 
  Used     622     623     624     625

CONST                           Stack                             REAL*8, Implicit type
  Decl
  Set      624
  Used     626

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set      621
  Used     622

DZ                              Stack                             REAL*8, Implicit type
  Decl
  Set      615
  Used     616

EIGVAL                          Stack                             REAL*8, Implicit type
  Decl
  Set      622
  Used     624

EPS                             Stack                             REAL*8, Implicit type
  Decl
  Set      612
  Used     616

HGLJD                                                             Function, REAL*8, RESULT(HGLJD), EXTERNAL
  Decl     602
  Set 
  Used

HGLJD                           Register                          REAL*8, Function result
  Decl
  Set      617     626
  Used

I                               Dummy Arg                         INTEGER, Implicit type
  Decl     602
  Set 
  Used     614

JACOBF                                                            Subroutine
  Decl
  Set 
  Used       0     625

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      620
  Used     621     623     625

NP                              Dummy Arg                         INTEGER, Implicit type
  Decl     602
  Set 
  Used     620

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      613
  Used     617     622     624     626

P                               Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     625

PD                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     625     626

PDI                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     624

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     625

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     625

PI                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     624

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     625

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     623     625

Z                               Dummy Arg                         REAL*8
  Decl     602     611
  Set 
  Used     615     625     626

ZGLJ                            Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     602     611
  Set 
  Used     614

ZI                              Stack                             REAL*8, Implicit type
  Decl
  Set      614
  Used     615     623     624     626


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   DGJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     663
  Set 
  Used     661

200                                                               Statement label
  Decl     669
  Set 
  Used     665     666

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     630     643
  Set 
  Used     659

ALPHAD                          Stack                             REAL*8
  Decl     642
  Set      659
  Used     664

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     630     643
  Set 
  Used     655     660

BETAD                           Stack                             REAL*8
  Decl     642
  Set      660
  Used     664

D                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     630     643
  Set      667
  Used

DD                              Stack                             REAL*8, DIMENSION(84, 84)
  Decl     642
  Set 
  Used     664     667

DGJ                                                               Subroutine, EXTERNAL
  Decl     630
  Set 
  Used

DGJD                                                              Subroutine
  Decl
  Set 
  Used     664

DT                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     630     643
  Set      668
  Used

DTD                             Stack                             REAL*8, DIMENSION(84, 84)
  Decl     642
  Set 
  Used     664     668

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     653     657

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     662     667     668

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     667     668

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     640
  Set 
  Used     641     649     651

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     630
  Set 
  Used     645     649     652     661     664     665     666

NZD                             Dummy Arg                         INTEGER, Implicit type
  Decl     630
  Set 
  Used     643

NZDD                                                              INTEGER, Implicit type, PARAMETER
  Decl     641
  Set 
  Used     642     664

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     630     643
  Set 
  Used     662

ZD                              Stack                             REAL*8, DIMENSION(84)
  Decl     642
  Set      662
  Used     664


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   DGJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

200                                                               Statement label
  Decl     707
  Set 
  Used     699     700

ALPHA                           Dummy Arg                         REAL*8
  Decl     673     684
  Set 
  Used     701     702     704

BETA                            Dummy Arg                         REAL*8
  Decl     673     684
  Set 
  Used     694     701     702     704

D                               Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl     673     684
  Set      703     704
  Used     706

DGJD                                                              Subroutine, EXTERNAL
  Decl     673
  Set 
  Used

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set      686
  Used

DT                              Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl     673     684
  Set      706
  Used

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     696

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     701     703     704     705     706

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     702     703     704     706

JACOBF                                                            Subroutine
  Decl
  Set 
  Used       0     702

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      685
  Used     686

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     673
  Set 
  Used     685     690     699     700     701     702

NZD                             Dummy Arg                         INTEGER, Implicit type
  Decl     673
  Set 
  Used     684

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      687
  Used     694     705

PDI                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701     703

PDJ                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     702     703

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701     702

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701     702

PI                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701

PJ                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     702

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701     702

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     701     702

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      688
  Used     704     705

Z                               Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     673     684
  Set 
  Used     701     702     703     704     705


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   DGLJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl     744
  Set 
  Used     742

200                                                               Statement label
  Decl     750
  Set 
  Used     746     747

ALPHA                           Dummy Arg                         DOUBLE PRECISION
  Decl     711     724
  Set 
  Used     740

ALPHAD                          Stack                             REAL*8
  Decl     723
  Set      740
  Used     745

BETA                            Dummy Arg                         DOUBLE PRECISION
  Decl     711     724
  Set 
  Used     736     741

BETAD                           Stack                             REAL*8
  Decl     723
  Set      741
  Used     745

D                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     711     724
  Set      748
  Used

DD                              Stack                             REAL*8, DIMENSION(84, 84)
  Decl     723
  Set 
  Used     745     748

DGLJ                                                              Subroutine, EXTERNAL
  Decl     711
  Set 
  Used

DGLJD                                                             Subroutine
  Decl
  Set 
  Used     745

DT                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     711     724
  Set      749
  Used

DTD                             Stack                             REAL*8, DIMENSION(84, 84)
  Decl     723
  Set 
  Used     745     749

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     734     738

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     743     748     749

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     748     749

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     721
  Set 
  Used     722     730     732

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     711
  Set 
  Used     726     730     733     742     745     746     747

NZD                             Dummy Arg                         INTEGER, Implicit type
  Decl     711
  Set 
  Used     724

NZDD                                                              INTEGER, Implicit type, PARAMETER
  Decl     722
  Set 
  Used     723     745

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     711     724
  Set 
  Used     743

ZD                              Stack                             REAL*8, DIMENSION(84)
  Decl     723
  Set      743
  Used     745


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   DGLJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

200                                                               Statement label
  Decl     796
  Set 
  Used     781     782

ALPHA                           Dummy Arg                         REAL*8
  Decl     754     765
  Set 
  Used     770     783     784     785     786     789     792     794

BETA                            Dummy Arg                         REAL*8
  Decl     754     765
  Set 
  Used     770     776     783     784     785     786     789     792     794

CI                              Stack                             REAL*8, Implicit type
  Decl
  Set      785
  Used     787

CJ                              Stack                             REAL*8, Implicit type
  Decl
  Set      786
  Used     787

D                               Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl     754     765
  Set      787     789     792     794
  Used     795

DGLJD                                                             Subroutine, EXTERNAL
  Decl     754
  Set 
  Used

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set      767
  Used     770

DT                              Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl     754     765
  Set      795
  Used

EIGVAL                          Stack                             REAL*8, Implicit type
  Decl
  Set      770
  Used     785     786     792     794

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     778

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     783     785     787     788     789     790     791     792     793     794     795

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     784     786     787     789     792     794     795

JACOBF                                                            Subroutine
  Decl
  Set 
  Used       0     784

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      766
  Used     767     783     784

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     754
  Set 
  Used     766     772     781     782     788     793

NZD                             Dummy Arg                         INTEGER, Implicit type
  Decl     754
  Set 
  Used     765

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set      768
  Used     770     776     785     786     789     790

PDI                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     785

PDJ                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     784     786

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     784

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     784

PI                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     785

PJ                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     784     786

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     784

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used     783     784

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set      769
  Used     790     792     794

Z                               Dummy Arg                         REAL*8, DIMENSION(1)
  Decl     754     765
  Set 
  Used     783     784     785     786     787     789     790


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   DGLL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

200                                                               Statement label
  Decl     831
  Set 
  Used     823     824

D                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     800     810
  Set      818     825     826     828     829
  Used     830

D0                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      822
  Used     828     829

DGLL                                                              Subroutine, EXTERNAL
  Decl     800
  Set 
  Used

DT                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     800     810
  Set      830
  Used

FN                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      821
  Used     822

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     825     826     827     828     829     830

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     825     826     827     828     829     830

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      811
  Used     821

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     809
  Set 
  Used     812     814

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     800
  Set 
  Used     811     812     815     817     823     824     829

NZD                             Dummy Arg                         INTEGER, Implicit type
  Decl     800
  Set 
  Used     810

Z                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     800     810
  Set 
  Used     827


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   HGLL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     845

ALFAN                           Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      850
  Used     852

DZ                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      844
  Used     845

EPS                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      843
  Used     845

HGLL                                                              Function, DOUBLE PRECISION, RESULT(HGLL), EXTERNAL
  Decl     835
  Set 
  Used

HGLL                            Register                          DOUBLE PRECISION, Function result
  Decl
  Set      846     851
  Used

I                               Dummy Arg                         INTEGER, Implicit type
  Decl     835
  Set 
  Used     844     852

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      849
  Used     850

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     835
  Set 
  Used     849

Z                               Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     835
  Set 
  Used     844     851     852

ZGLL                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     835     842
  Set 
  Used     844     852


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   HGL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     866

DZ                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      865
  Used     866

EPS                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      864
  Used     866

HGL                                                               Function, DOUBLE PRECISION, RESULT(HGL), EXTERNAL
  Decl     856
  Set 
  Used

HGL                             Register                          DOUBLE PRECISION, Function result
  Decl
  Set      867     871
  Used

I                               Dummy Arg                         INTEGER, Implicit type
  Decl     856
  Set 
  Used     865     871

N                               Stack                             INTEGER, Implicit type
  Decl
  Set      870
  Used

NZ                              Dummy Arg                         INTEGER, Implicit type
  Decl     856
  Set 
  Used     870

Z                               Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     856
  Set 
  Used     865     871

ZGL                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(1)
  Decl     856     863
  Set 
  Used     865     871


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   PNLEG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl     901
  Set 
  Used     896

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     887

FK                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      897
  Used     898

K                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     897

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     875
  Set 
  Used     890     896     903

P1                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      889     899
  Used     891     898

P2                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      894     900
  Used     895     898     899

P3                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      895     898
  Used     900     902

PNLEG                                                             Function, DOUBLE PRECISION, RESULT(PNLEG), EXTERNAL
  Decl     875
  Set 
  Used

PNLEG                           Register                          DOUBLE PRECISION, Function result
  Decl
  Set      891     902     903
  Used

Z                               Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     875
  Set      887
  Used     887     894     898


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   PNDLEG
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl     928
  Set 
  Used     920

FK                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      921
  Used     922     923

K                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     921

N                               Dummy Arg                         INTEGER, Implicit type
  Decl     907
  Set 
  Used     920     930

P1                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      915     924
  Used     922

P1D                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      917     926
  Used     923

P2                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      916     925
  Used     922     923     924

P2D                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      918     927
  Used     923     926

P3                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      922
  Used     925

P3D                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      919     923
  Used     927     929

PNDLEG                                                            Function, DOUBLE PRECISION, RESULT(PNDLEG), EXTERNAL
  Decl     907
  Set 
  Used

PNDLEG                          Register                          DOUBLE PRECISION, Function result
  Decl
  Set      929     930
  Used

Z                               Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     907
  Set 
  Used     916     922     923


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   DGLLGL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl     965
  Set 
  Used     954     955

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used     958

D                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     934     946
  Set      948     959     961
  Used     964

DGLLGL                                                            Subroutine, EXTERNAL
  Decl     934
  Set 
  Used

DT                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     934     946
  Set      949     964
  Used

EPS                             Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      952
  Used     958

IM12                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     934     946
  Set 
  Used     962

IP                              Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     956     959     961     962     964

JQ                              Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used     957     959     961     962     964

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl     934
  Set 
  Used     946

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl     934
  Set 
  Used     946

NM1                             Stack                             INTEGER, Implicit type
  Decl
  Set      953
  Used

NZM1                            Dummy Arg                         INTEGER, Implicit type
  Decl     934
  Set 
  Used     947     953     955

NZM2                            Dummy Arg                         INTEGER, Implicit type
  Decl     934
  Set 
  Used     954

ZM1                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl     934     946
  Set 
  Used     957

ZM2                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl     934     946
  Set 
  Used     956

ZP                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      956
  Used     962

ZQ                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set      957
  Used     958     962


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   DGLJGJ
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl    1010
  Set 
  Used    1006    1008

200                                                               Statement label
  Decl    1013
  Set 
  Used    1011

300                                                               Statement label
  Decl    1019
  Set 
  Used    1015    1016

ALPHA                           Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     969
  Set 
  Used    1004

ALPHAD                          Stack                             REAL*8
  Decl     987
  Set     1004
  Used    1014

BETA                            Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl     969
  Set 
  Used     999    1005

BETAD                           Stack                             REAL*8
  Decl     987
  Set     1005
  Used    1014

D                               Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     969     982
  Set     1017
  Used

DD                              Stack                             REAL*8, DIMENSION(84, 84)
  Decl     985
  Set 
  Used    1014    1017

DGLJGJ                                                            Subroutine, EXTERNAL
  Decl     969
  Set 
  Used

DGLJGJD                                                           Subroutine
  Decl
  Set 
  Used    1014

DT                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     969     982
  Set     1018
  Used

DTD                             Stack                             REAL*8, DIMENSION(84, 84)
  Decl     985
  Set 
  Used    1014    1018

EXITT                                                             Subroutine
  Decl
  Set 
  Used       0     997    1001

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1007    1009    1012    1017    1018

IGLG                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl     969     982
  Set 
  Used    1009

IGLGD                           Stack                             REAL*8, DIMENSION(84, 84)
  Decl     986
  Set     1009
  Used    1014

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1009    1017    1018

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl     969
  Set 
  Used     982

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl     969
  Set 
  Used     982

NDD                                                               INTEGER, Implicit type, PARAMETER
  Decl     984
  Set 
  Used     985     986    1014

NMAX                                                              INTEGER, Implicit type, PARAMETER
  Decl     983
  Set 
  Used     984     993     995

NPG                             Dummy Arg                         INTEGER, Implicit type
  Decl     969
  Set 
  Used    1006    1014    1015

NPGL                            Dummy Arg                         INTEGER, Implicit type
  Decl     969
  Set 
  Used     989     993     996    1008    1011    1014    1016

ZG                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl     969     982
  Set 
  Used    1007

ZGD                             Stack                             REAL*8, DIMENSION(84)
  Decl     986
  Set     1007
  Used    1014

ZGL                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl     969     982
  Set 
  Used    1012

ZGLD                            Stack                             REAL*8, DIMENSION(84)
  Decl     986
  Set     1012
  Used    1014


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                 C r o s s   R e f e r e n c e   for   DGLJGJD
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

100                                                               Statement label
  Decl    1072
  Set 
  Used    1056    1057

ABS                                                               Function, REAL, INTRINSIC
  Decl
  Set 
  Used    1058

ALPHA                           Dummy Arg                         REAL*8
  Decl    1023    1038
  Set 
  Used    1054    1060    1063    1064    1065    1066

BETA                            Dummy Arg                         REAL*8
  Decl    1023    1038
  Set 
  Used    1044    1054    1060    1063    1064    1065    1066

CONST                           Stack                             REAL*8, Implicit type
  Decl
  Set     1067
  Used    1069

D                               Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl    1023    1037
  Set     1060    1068
  Used    1071

DGLJGJD                                                           Subroutine, EXTERNAL
  Decl    1023
  Set 
  Used

DN                              Stack                             REAL*8, Implicit type
  Decl
  Set     1053
  Used    1054

DT                              Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl    1023    1037
  Set     1071
  Used

DZ                              Stack                             REAL*8, Implicit type
  Decl
  Set     1058
  Used    1059

EIGVAL                          Stack                             REAL*8, Implicit type
  Decl
  Set     1054
  Used    1067    1068

EPS                             Stack                             REAL*8, Implicit type
  Decl
  Set     1049
  Used    1059

EXITT                                                             Subroutine, EXTERNAL
  Decl
  Set 
  Used       0    1046

FACI                            Stack                             REAL*8, Implicit type
  Decl
  Set     1065
  Used    1068

FACJ                            Stack                             REAL*8, Implicit type
  Decl
  Set     1066
  Used    1067

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1058    1060    1061    1063    1065    1068    1069    1071

IGLG                            Dummy Arg                         REAL*8, DIMENSION(<exp>, <exp>)
  Decl    1023    1038
  Set 
  Used

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1058    1060    1064    1066    1068    1069    1071

JACOBF                                                            Subroutine
  Decl
  Set 
  Used       0    1064

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1023
  Set 
  Used    1037    1038

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1023
  Set 
  Used    1037    1038

NGL                             Stack                             INTEGER, Implicit type
  Decl
  Set     1052
  Used    1053    1063    1064

NPG                             Dummy Arg                         INTEGER, Implicit type
  Decl    1023
  Set 
  Used    1056

NPGL                            Dummy Arg                         INTEGER, Implicit type
  Decl    1023
  Set 
  Used    1040    1052    1057

ONE                             Stack                             REAL*8, Implicit type
  Decl
  Set     1050
  Used    1054    1060    1061    1065    1066    1069

PDI                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1068    1069

PDJ                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1064    1067

PDM1                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1064

PDM2                            Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1064

PI                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1068

PJ                              Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1064    1067

PM1                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1064

PM2                             Stack                             REAL*8, Implicit type
  Decl
  Set 
  Used    1063    1064

TWO                             Stack                             REAL*8, Implicit type
  Decl
  Set     1051
  Used    1061

ZG                              Dummy Arg                         REAL*8, DIMENSION(<exp>)
  Decl    1023    1037
  Set 
  Used    1058    1060    1061    1063    1065    1068    1069

ZGL                             Dummy Arg                         REAL*8, DIMENSION(<exp>)
  Decl    1023    1037
  Set 
  Used    1058    1064    1066    1068    1069


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   IGLM
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl    1097
  Set 
  Used    1092    1094

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1093    1095    1096

I12                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1076    1086
  Set     1088    1095
  Used    1096

IGLM                                                              Subroutine, EXTERNAL
  Decl    1076
  Set 
  Used

IT12                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1076    1086
  Set     1089    1096
  Used

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1095    1096

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1076
  Set 
  Used    1086

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1076
  Set 
  Used    1086

NZ1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1076
  Set 
  Used    1087    1094

NZ2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1076
  Set 
  Used    1092

Z1                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1076    1086
  Set 
  Used

Z2                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1076    1086
  Set 
  Used    1093

ZI                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set     1093
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   IGLLM
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl    1124
  Set 
  Used    1117    1119

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1118    1121    1122

I12                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1101    1111
  Set     1113    1121
  Used    1122

IGLLM                                                             Subroutine, EXTERNAL
  Decl    1101
  Set 
  Used

IT12                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1101    1111
  Set     1114    1122
  Used

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1121    1122

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1101
  Set 
  Used    1111

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1101
  Set 
  Used    1111

NZ1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1101
  Set 
  Used    1112    1119

NZ2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1101
  Set 
  Used    1117

Z1                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1101    1111
  Set 
  Used

Z2                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1101    1111
  Set 
  Used    1118

ZI                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set     1118
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                   C r o s s   R e f e r e n c e   for   IGJM
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl    1150
  Set 
  Used    1145    1147

ALPHA                           Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl    1128
  Set 
  Used

BETA                            Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl    1128
  Set 
  Used

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1146    1148    1149

I12                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1128    1139
  Set     1141    1148
  Used    1149

IGJM                                                              Subroutine, EXTERNAL
  Decl    1128
  Set 
  Used

IT12                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1128    1139
  Set     1142    1149
  Used

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1148    1149

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1128
  Set 
  Used    1139

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1128
  Set 
  Used    1139

NZ1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1128
  Set 
  Used    1140    1147

NZ2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1128
  Set 
  Used    1145

Z1                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1128    1139
  Set 
  Used

Z2                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1128    1139
  Set 
  Used    1146

ZI                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set     1146
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                  C r o s s   R e f e r e n c e   for   IGLJM
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name                            Storage                           Attributes
----                            -------                           ----------

10                                                                Statement label
  Decl    1176
  Set 
  Used    1171    1173

ALPHA                           Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl    1154
  Set 
  Used

BETA                            Dummy Arg                         DOUBLE PRECISION, Implicit type
  Decl    1154
  Set 
  Used

I                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1172    1174    1175

I12                             Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1154    1165
  Set     1167    1174
  Used    1175

IGLJM                                                             Subroutine, EXTERNAL
  Decl    1154
  Set 
  Used

IT12                            Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>, <exp>)
  Decl    1154    1165
  Set     1168    1175
  Used

J                               Stack                             INTEGER, Implicit type
  Decl
  Set 
  Used    1174    1175

ND1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1154
  Set 
  Used    1165

ND2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1154
  Set 
  Used    1165

NZ1                             Dummy Arg                         INTEGER, Implicit type
  Decl    1154
  Set 
  Used    1166    1173

NZ2                             Dummy Arg                         INTEGER, Implicit type
  Decl    1154
  Set 
  Used    1171

Z1                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1154    1165
  Set 
  Used

Z2                              Dummy Arg                         DOUBLE PRECISION, DIMENSION(<exp>)
  Decl    1154    1165
  Set 
  Used    1172

ZI                              Stack                             DOUBLE PRECISION, Implicit type
  Decl
  Set     1172
  Used


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   DGLJGJ (Line 456, file speclib.f)
                   HGLJ (Line 563, file speclib.f)
                   HGLL (Line 616, file speclib.f)
                   PNDLEG (Line 845, file speclib.f)
                   PNORMJ (Line 866, file speclib.f)
                   JACOBF (Line 887, file speclib.f)
                   SQRT(Intrinsic) (Line 958, file speclib.f)
                   SQRT(Intrinsic) (Line 958, file speclib.f)
                   ZWGJD (Line 1058, file speclib.f)

Name  Messages
----  --------
ATAN(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   DGLJD (Line 379, file speclib.f)
                   DGLJGJ (Line 438, file speclib.f)

Name  Messages
----  --------
COS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   DGLJGJ (Line 441, file speclib.f)
                   DGLJGJ (Line 443, file speclib.f)

Name  Messages
----  --------
DGJ
      Defined as:  Subroutine (line 630, file speclib.f)

      Interface:   None

      Calls:       EXITT (Line 647, file speclib.f)
                   EXITT (Line 653, file speclib.f)
                   EXITT (Line 657, file speclib.f)
                   DGJD (Line 664, file speclib.f)

Name  Messages
----  --------
DGJD
      Defined as:  Subroutine (line 673, file speclib.f)

      Interface:   None

      Called By:   IGJM (Line 664, file speclib.f)

      Calls:       EXITT (Line 692, file speclib.f)
                   EXITT (Line 696, file speclib.f)
                   JACOBF (Line 701, file speclib.f)
                   JACOBF (Line 702, file speclib.f)

Name  Messages
----  --------
DGLJ
      Defined as:  Subroutine (line 711, file speclib.f)

      Interface:   None

      Calls:       EXITT (Line 728, file speclib.f)
                   EXITT (Line 734, file speclib.f)
                   EXITT (Line 738, file speclib.f)
                   DGLJD (Line 745, file speclib.f)

Name  Messages
----  --------
DGLJD
      Defined as:  Subroutine (line 754, file speclib.f)

      Interface:   None

      Called By:   IGLLM (Line 745, file speclib.f)

      Calls:       EXITT (Line 774, file speclib.f)
                   EXITT (Line 778, file speclib.f)
                   JACOBF (Line 783, file speclib.f)
                   JACOBF (Line 784, file speclib.f)

Name  Messages
----  --------
DGLJGJ
      Defined as:  Subroutine (line 969, file speclib.f)

      Interface:   None

      Calls:       EXITT (Line 991, file speclib.f)
                   EXITT (Line 997, file speclib.f)
                   EXITT (Line 1001, file speclib.f)
                   DGLJGJD (Line 1014, file speclib.f)

Name  Messages
----  --------
DGLJGJD
      Defined as:  Subroutine (line 1023, file speclib.f)

      Interface:   None

      Called By:   ZWGJ (Line 1014, file speclib.f)

      Calls:       EXITT (Line 1042, file speclib.f)
                   EXITT (Line 1046, file speclib.f)
                   ABS(Intrinsic) (Line 1058, file speclib.f)
                   JACOBF (Line 1063, file speclib.f)
                   JACOBF (Line 1064, file speclib.f)

Name  Messages
----  --------
DGLL
      Defined as:  Subroutine (line 800, file speclib.f)

      Interface:   None

      Calls:       PNLEG (Line 826, file speclib.f)
                   PNLEG (Line 827, file speclib.f)

Name  Messages
----  --------
DGLLGL
      Defined as:  Subroutine (line 934, file speclib.f)

      Interface:   None

      Calls:       ABS(Intrinsic) (Line 958, file speclib.f)
                   ABS(Intrinsic) (Line 958, file speclib.f)
                   PNLEG (Line 961, file speclib.f)
                   PNLEG (Line 961, file speclib.f)

Name  Messages
----  --------
ENDW1
      Defined as:  Function (line 283, file speclib.f)

      Interface:   None

      Called By:   DGLLGL (Line 276, file speclib.f)

      Calls:       GAMMAF (Line 296, file speclib.f)
                   GAMMAF (Line 296, file speclib.f)
                   GAMMAF (Line 296, file speclib.f)
                   GAMMAF (Line 302, file speclib.f)
                   GAMMAF (Line 302, file speclib.f)
                   GAMMAF (Line 302, file speclib.f)
                   GAMMAF (Line 304, file speclib.f)
                   GAMMAF (Line 304, file speclib.f)
                   GAMMAF (Line 304, file speclib.f)

Name  Messages
----  --------
ENDW2
      Defined as:  Function (line 327, file speclib.f)

      Interface:   None

      Called By:   DGLLGL (Line 278, file speclib.f)

      Calls:       GAMMAF (Line 340, file speclib.f)
                   GAMMAF (Line 340, file speclib.f)
                   GAMMAF (Line 340, file speclib.f)
                   GAMMAF (Line 346, file speclib.f)
                   GAMMAF (Line 346, file speclib.f)
                   GAMMAF (Line 346, file speclib.f)
                   GAMMAF (Line 348, file speclib.f)
                   GAMMAF (Line 348, file speclib.f)
                   GAMMAF (Line 348, file speclib.f)

Name  Messages
----  --------
EXITT
      Defined as:  No definitions.

      Interface:   None

      Called By:   ABS(Intrinsic) (Line 143, file speclib.f)
                   DGLJ (Line 175, file speclib.f)
                   DGLJ (Line 179, file speclib.f)
                   COS(Intrinsic) (Line 226, file speclib.f)
                   DGLLGL (Line 258, file speclib.f)
                   DGLLGL (Line 262, file speclib.f)
                   HGL (Line 537, file speclib.f)
                   HGLJD (Line 590, file speclib.f)
                   IGJM (Line 647, file speclib.f)
                   IGJM (Line 653, file speclib.f)
                   IGJM (Line 657, file speclib.f)
                   IGLJM (Line 692, file speclib.f)
                   IGLJM (Line 696, file speclib.f)
                   IGLLM (Line 728, file speclib.f)
                   IGLLM (Line 734, file speclib.f)
                   IGLLM (Line 738, file speclib.f)
                   IGLM (Line 774, file speclib.f)
                   IGLM (Line 778, file speclib.f)
                   ZWGJ (Line 991, file speclib.f)
                   ZWGJ (Line 997, file speclib.f)
                   ZWGJ (Line 1001, file speclib.f)
                   ZWGJD (Line 1042, file speclib.f)
                   ZWGJD (Line 1046, file speclib.f)

Name  Messages
----  --------
GAMMAF
      Defined as:  Function (line 371, file speclib.f)

      Interface:   None

      Called By:   DGLJ (Line 184, file speclib.f)
                   DGLJ (Line 184, file speclib.f)
                   DGLJ (Line 184, file speclib.f)
                   ENDW1 (Line 296, file speclib.f)
                   ENDW1 (Line 296, file speclib.f)
                   ENDW1 (Line 296, file speclib.f)
                   ENDW1 (Line 302, file speclib.f)
                   ENDW1 (Line 302, file speclib.f)
                   ENDW1 (Line 302, file speclib.f)
                   ENDW1 (Line 304, file speclib.f)
                   ENDW1 (Line 304, file speclib.f)
                   ENDW1 (Line 304, file speclib.f)
                   ENDW2 (Line 340, file speclib.f)
                   ENDW2 (Line 340, file speclib.f)
                   ENDW2 (Line 340, file speclib.f)
                   ENDW2 (Line 346, file speclib.f)
                   ENDW2 (Line 346, file speclib.f)
                   ENDW2 (Line 346, file speclib.f)
                   ENDW2 (Line 348, file speclib.f)
                   ENDW2 (Line 348, file speclib.f)
                   ENDW2 (Line 348, file speclib.f)
                   DGLL (Line 403, file speclib.f)
                   DGLL (Line 403, file speclib.f)
                   DGLL (Line 404, file speclib.f)
                   DGLL (Line 404, file speclib.f)
                   DGLL (Line 408, file speclib.f)
                   DGLL (Line 408, file speclib.f)
                   DGLL (Line 409, file speclib.f)

      Calls:       ATAN(Intrinsic) (Line 379, file speclib.f)
                   SQRT(Intrinsic) (Line 381, file speclib.f)
                   SQRT(Intrinsic) (Line 382, file speclib.f)
                   SQRT(Intrinsic) (Line 385, file speclib.f)
                   SQRT(Intrinsic) (Line 386, file speclib.f)
                   SQRT(Intrinsic) (Line 387, file speclib.f)

Name  Messages
----  --------
HGJ
      Defined as:  Function (line 520, file speclib.f)

      Interface:   None

      Called By:   ZWGLJD (Line 1148, file speclib.f)

      Calls:       HGJD (Line 545, file speclib.f)
                   EXITT (Line 537, file speclib.f)

Name  Messages
----  --------
HGJD
      Defined as:  Function (line 549, file speclib.f)

      Interface:   None

      Called By:   HGL (Line 545, file speclib.f)

      Calls:       ABS(Intrinsic) (Line 563, file speclib.f)
                   JACOBF (Line 567, file speclib.f)
                   JACOBF (Line 568, file speclib.f)

Name  Messages
----  --------
HGL
      Defined as:  Function (line 856, file speclib.f)

      Interface:   None

      Called By:   ZWGL (Line 1095, file speclib.f)

      Calls:       ABS(Intrinsic) (Line 866, file speclib.f)
                   PNLEG (Line 871, file speclib.f)
                   PNDLEG (Line 871, file speclib.f)

Name  Messages
----  --------
HGLJ
      Defined as:  Function (line 573, file speclib.f)

      Interface:   None

      Called By:   ZWGLL (Line 1174, file speclib.f)

      Calls:       HGLJD (Line 598, file speclib.f)
                   EXITT (Line 590, file speclib.f)

Name  Messages
----  --------
HGLJD
      Defined as:  Function (line 602, file speclib.f)

      Interface:   None

      Called By:   HGLJD (Line 598, file speclib.f)

      Calls:       ABS(Intrinsic) (Line 616, file speclib.f)
                   JACOBF (Line 623, file speclib.f)
                   JACOBF (Line 625, file speclib.f)

Name  Messages
----  --------
HGLL
      Defined as:  Function (line 835, file speclib.f)

      Interface:   None

      Called By:   ZWGLJ (Line 1121, file speclib.f)

      Calls:       ABS(Intrinsic) (Line 845, file speclib.f)
                   PNDLEG (Line 851, file speclib.f)
                   PNLEG (Line 852, file speclib.f)

Name  Messages
----  --------
IGJM
      Defined as:  Subroutine (line 1128, file speclib.f)

      Interface:   None

      Calls:       HGJ (Line 1148, file speclib.f)

Name  Messages
----  --------
IGLJM
      Defined as:  Subroutine (line 1154, file speclib.f)

      Interface:   None

      Calls:       HGLJ (Line 1174, file speclib.f)

Name  Messages
----  --------
IGLLM
      Defined as:  Subroutine (line 1101, file speclib.f)

      Interface:   None

      Calls:       HGLL (Line 1121, file speclib.f)

Name  Messages
----  --------
IGLM
      Defined as:  Subroutine (line 1076, file speclib.f)

      Interface:   None

      Calls:       HGL (Line 1095, file speclib.f)

Name  Messages
----  --------
JACG
      Defined as:  Subroutine (line 421, file speclib.f)

      Interface:   None

      Called By:   DGLJ (Line 189, file speclib.f)

      Calls:       ATAN(Intrinsic) (Line 438, file speclib.f)
                   COS(Intrinsic) (Line 441, file speclib.f)
                   COS(Intrinsic) (Line 443, file speclib.f)
                   JACOBF (Line 448, file speclib.f)
                   ABS(Intrinsic) (Line 456, file speclib.f)

Name  Messages
----  --------
JACOBF
      Defined as:  Subroutine (line 479, file speclib.f)

      Interface:   None

      Called By:   DGLJ (Line 201, file speclib.f)
                   DGLLGL (Line 275, file speclib.f)
                   DGLLGL (Line 277, file speclib.f)
                   DGLJGJ (Line 448, file speclib.f)
                   HGLJ (Line 567, file speclib.f)
                   HGLJ (Line 568, file speclib.f)
                   HGLL (Line 623, file speclib.f)
                   HGLL (Line 625, file speclib.f)
                   IGLJM (Line 701, file speclib.f)
                   IGLJM (Line 702, file speclib.f)
                   IGLM (Line 783, file speclib.f)
                   IGLM (Line 784, file speclib.f)
                   ZWGJD (Line 1063, file speclib.f)
                   ZWGJD (Line 1064, file speclib.f)

Name  Messages
----  --------
PNDLEG
      Defined as:  Function (line 907, file speclib.f)

      Interface:   None

      Called By:   PNDLEG (Line 851, file speclib.f)
                   PNORMJ (Line 871, file speclib.f)

Name  Messages
----  --------
PNLEG
      Defined as:  Function (line 875, file speclib.f)

      Interface:   None

      Called By:   JACG (Line 826, file speclib.f)
                   JACG (Line 827, file speclib.f)
                   PNDLEG (Line 852, file speclib.f)
                   PNORMJ (Line 871, file speclib.f)
                   SQRT(Intrinsic) (Line 961, file speclib.f)
                   SQRT(Intrinsic) (Line 961, file speclib.f)

      Calls:       ABS(Intrinsic) (Line 887, file speclib.f)

Name  Messages
----  --------
PNORMJ
      Defined as:  Function (line 395, file speclib.f)

      Interface:   None

      Called By:   DGLJ (Line 198, file speclib.f)

      Calls:       GAMMAF (Line 403, file speclib.f)
                   GAMMAF (Line 403, file speclib.f)
                   GAMMAF (Line 404, file speclib.f)
                   GAMMAF (Line 404, file speclib.f)
                   GAMMAF (Line 408, file speclib.f)
                   GAMMAF (Line 408, file speclib.f)
                   GAMMAF (Line 409, file speclib.f)

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   DGLJD (Line 381, file speclib.f)
                   DGLJD (Line 382, file speclib.f)
                   DGLJD (Line 385, file speclib.f)
                   DGLJD (Line 386, file speclib.f)
                   DGLJD (Line 387, file speclib.f)

Name  Messages
----  --------
ZWGJ
      Defined as:  Subroutine (line 124, file speclib.f)

      Interface:   None

      Called By:   ATAN(Intrinsic) (Line 103, file speclib.f)

      Calls:       EXITT (Line 143, file speclib.f)
                   ZWGJD (Line 147, file speclib.f)

Name  Messages
----  --------
ZWGJD
      Defined as:  Subroutine (line 155, file speclib.f)

      Interface:   None

      Called By:   ABS(Intrinsic) (Line 147, file speclib.f)
                   DGLLGL (Line 268, file speclib.f)

      Calls:       EXITT (Line 175, file speclib.f)
                   EXITT (Line 179, file speclib.f)
                   GAMMAF (Line 184, file speclib.f)
                   GAMMAF (Line 184, file speclib.f)
                   GAMMAF (Line 184, file speclib.f)
                   JACG (Line 189, file speclib.f)
                   PNORMJ (Line 198, file speclib.f)
                   JACOBF (Line 201, file speclib.f)

Name  Messages
----  --------
ZWGL
      Defined as:  Subroutine (line 90, file speclib.f)

      Interface:   None

      Calls:       ZWGJ (Line 103, file speclib.f)

Name  Messages
----  --------
ZWGLJ
      Defined as:  Subroutine (line 207, file speclib.f)

      Interface:   None

      Called By:   DGJ (Line 120, file speclib.f)

      Calls:       EXITT (Line 226, file speclib.f)
                   ZWGLJD (Line 230, file speclib.f)

Name  Messages
----  --------
ZWGLJD
      Defined as:  Subroutine (line 238, file speclib.f)

      Interface:   None

      Called By:   COS(Intrinsic) (Line 230, file speclib.f)

      Calls:       EXITT (Line 258, file speclib.f)
                   EXITT (Line 262, file speclib.f)
                   ZWGJD (Line 268, file speclib.f)
                   JACOBF (Line 275, file speclib.f)
                   JACOBF (Line 277, file speclib.f)
                   ENDW1 (Line 276, file speclib.f)
                   ENDW2 (Line 278, file speclib.f)

Name  Messages
----  --------
ZWGLL
      Defined as:  Subroutine (line 107, file speclib.f)

      Interface:   None

      Calls:       ZWGLJ (Line 120, file speclib.f)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
